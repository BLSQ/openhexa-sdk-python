query pipelineRun($attachment: Boolean, $name: String!, $page: Int, $perPage: Int, $direction: OrderByDirection!, $orderBy: String!, $page1: Int!, $perPage1: Int, $orderBy1: PipelineRunOrderBy, $page2: Int, $perPage2: Int, $page3: Int, $perPage3: Int, $id: UUID!){
    pipelineRun(id: $id){
        code
        config
        datasetVersions{
            attributes{
                createdAt
                id
                key
                label
                system
                updatedAt
                value
            }
            changelog
            createdAt
            createdBy{
                dateJoined
                displayName
                email
                firstName
                id
                language
                lastLogin
                lastName
            }
            dataset{
                createdAt
                description
                id
                name
                slug
                targetId
                updatedAt
            }
            fileByName(name: $name){
                contentType
                createdAt
                downloadUrl(attachment: $attachment)
                filename
                id
                properties
                size
                targetId
                uri
            }
            files(page: $page, perPage: $perPage){
                pageNumber
                totalItems
                totalPages
            }
            id
            name
            permissions{
                delete
                download
                update
            }
            targetId
        }
        duration
        enableDebugLogs
        executionDate
        id
        logs
        messages{
            message
            priority
            timestamp
        }
        outputs{
            __typename
            ... on BucketObject {
                key
                name
                path
                size
                type
                updatedAt
            }
            ... on DatabaseTable {
                columns{
                    name
                    type
                }
                count
                name
                rows(direction: $direction, orderBy: $orderBy, page: $page1, perPage: $perPage1){
                    hasNextPage
                    hasPreviousPage
                    items
                    pageNumber
                }
                sample
            }
            ... on GenericOutput {
                genericName
                genericType
                genericUri
            }
        }
        pipeline{
            code
            config
            createdAt
            currentVersion{
                config
                createdAt
                description
                externalLink
                id
                isLatestVersion
                name
                timeout
                versionName
                versionNumber
                zipfile
            }
            description
            hasNewTemplateVersions
            id
            name
            newTemplateVersions{
                changelog
                createdAt
                id
                isLatestVersion
                versionNumber
            }
            notebookPath
            permissions{
                createVersion
                delete
                run
                schedule
                stopPipeline
                update
            }
            recipients{
                id
                notificationLevel
            }
            runs(orderBy: $orderBy1, page: $page2, perPage: $perPage2){
                pageNumber
                totalItems
                totalPages
            }
            schedule
            sourceTemplate{
                code
                config
                description
                id
                name
                updatedAt
            }
            template{
                code
                config
                description
                id
                name
                updatedAt
            }
            type
            updatedAt
            versions(page: $page3, perPage: $perPage3){
                pageNumber
                totalItems
                totalPages
            }
            webhookEnabled
            webhookUrl
            workspace{
                createdAt
                description
                dockerImage
                name
                slug
                updatedAt
            }
        }
        progress
        run_id
        sendMailNotifications
        status
        stoppedBy{
            avatar{
                color
                initials
            }
            dateJoined
            displayName
            email
            firstName
            id
            language
            lastLogin
            lastName
        }
        timeout
        triggerMode
        user{
            avatar{
                color
                initials
            }
            dateJoined
            displayName
            email
            firstName
            id
            language
            lastLogin
            lastName
        }
        version{
            config
            createdAt
            description
            externalLink
            id
            isLatestVersion
            name
            parameters{
                choices
                code
                connection
                default
                help
                multiple
                name
                required
                type
                widget
            }
            permissions{
                delete
                update
            }
            pipeline{
                code
                config
                createdAt
                description
                hasNewTemplateVersions
                id
                name
                notebookPath
                schedule
                type
                updatedAt
                webhookEnabled
                webhookUrl
            }
            templateVersion{
                changelog
                createdAt
                id
                isLatestVersion
                versionNumber
            }
            timeout
            user{
                dateJoined
                displayName
                email
                firstName
                id
                language
                lastLogin
                lastName
            }
            versionName
            versionNumber
            zipfile
        }
    }
}