query workspace($key: String!, $ignoreHiddenFiles: Boolean, $page: Int, $perPage: Int, $prefix: String, $query: String, $name: String!, $page1: Int, $perPage1: Int, $page2: Int, $perPage2: Int, $pinned: Boolean, $query1: String, $includeAccepted: Boolean, $page3: Int, $perPage3: Int, $page4: Int, $perPage4: Int, $slug: String!){
    workspace(slug: $slug){
        bucket{
            name
            object(key: $key){
                key
                name
                path
                size
                type
                updatedAt
            }
            objects(ignoreHiddenFiles: $ignoreHiddenFiles, page: $page, perPage: $perPage, prefix: $prefix, query: $query){
                hasNextPage
                hasPreviousPage
                pageNumber
            }
        }
        connections{
            createdAt
            description
            fields{
                code
                createdAt
                secret
                updatedAt
                value
            }
            id
            name
            permissions{
                delete
                update
            }
            slug
            type
            updatedAt
            user{
                dateJoined
                displayName
                email
                firstName
                id
                language
                lastLogin
                lastName
            }
        }
        countries{
            alpha3
            code
            flag
            name
            whoInfo{
                defaultCRS
                simplifiedExtent
            }
        }
        createdAt
        createdBy{
            avatar{
                color
                initials
            }
            dateJoined
            displayName
            email
            firstName
            id
            language
            lastLogin
            lastName
        }
        database{
            credentials{
                dbName
                host
                password
                port
                url
                username
            }
            table(name: $name){
                count
                name
                sample
            }
            tables(page: $page1, perPage: $perPage1){
                pageNumber
                totalItems
                totalPages
            }
        }
        datasets(page: $page2, perPage: $perPage2, pinned: $pinned, query: $query1){
            items{
                createdAt
                id
                isPinned
            }
            pageNumber
            totalItems
            totalPages
        }
        description
        dockerImage
        invitations(includeAccepted: $includeAccepted, page: $page3, perPage: $perPage3){
            items{
                createdAt
                email
                id
                role
                status
                updatedAt
            }
            pageNumber
            totalItems
            totalPages
        }
        members(page: $page4, perPage: $perPage4){
            items{
                createdAt
                id
                role
                updatedAt
            }
            pageNumber
            totalItems
            totalPages
        }
        name
        permissions{
            createConnection
            createDataset
            createObject
            createPipeline
            createPipelineTemplateVersion
            delete
            deleteDatabaseTable
            deleteObject
            downloadObject
            launchNotebookServer
            manageMembers
            update
        }
        slug
        updatedAt
    }
}