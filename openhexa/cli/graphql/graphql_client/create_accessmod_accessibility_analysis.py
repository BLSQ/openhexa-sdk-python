# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AccessmodAccessibilityAnalysisAlgorithm,
    AccessmodAnalysisStatus,
    AccessmodAnalysisType,
    AccessmodFilesetMode,
    AccessmodFilesetStatus,
    CreateAccessmodAccessibilityAnalysisError,
)


class CreateAccessmodAccessibilityAnalysis(BaseModel):
    create_accessmod_accessibility_analysis: (
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysis"
    ) = Field(alias="createAccessmodAccessibilityAnalysis")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysis(
    BaseModel
):
    analysis: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysis"
    ]
    errors: List[CreateAccessmodAccessibilityAnalysisError]
    success: bool


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysis(
    BaseModel
):
    algorithm: Optional[AccessmodAccessibilityAnalysisAlgorithm]
    author: "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisAuthor"
    barrier: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisBarrier"
    ]
    created_at: Any = Field(alias="createdAt")
    dem: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisDem"
    ]
    friction_surface: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisFrictionSurface"
    ] = Field(alias="frictionSurface")
    health_facilities: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisHealthFacilities"
    ] = Field(alias="healthFacilities")
    id: str
    invert_direction: Optional[bool] = Field(alias="invertDirection")
    knight_move: Optional[bool] = Field(alias="knightMove")
    land_cover: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisLandCover"
    ] = Field(alias="landCover")
    max_travel_time: Optional[int] = Field(alias="maxTravelTime")
    moving_speeds: Optional[Any] = Field(alias="movingSpeeds")
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    permissions: "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisPermissions"
    stack: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisStack"
    ]
    stack_priorities: Optional[Any] = Field(alias="stackPriorities")
    status: AccessmodAnalysisStatus
    transport_network: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTransportNetwork"
    ] = Field(alias="transportNetwork")
    travel_times: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTravelTimes"
    ] = Field(alias="travelTimes")
    type: AccessmodAnalysisType
    updated_at: Any = Field(alias="updatedAt")
    water: Optional[
        "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisWater"
    ]
    water_all_touched: Optional[bool] = Field(alias="waterAllTouched")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisAuthor(
    BaseModel
):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisBarrier(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisBarrierOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisBarrierOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisBarrierOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisBarrierOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisDem(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisDemOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisDemOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisDemOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisDemOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisFrictionSurface(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisFrictionSurfaceOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisFrictionSurfaceOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisFrictionSurfaceOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisFrictionSurfaceOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisHealthFacilities(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisHealthFacilitiesOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisHealthFacilitiesOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisHealthFacilitiesOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisHealthFacilitiesOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisLandCover(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisLandCoverOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisLandCoverOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisLandCoverOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisLandCoverOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    memberships: "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerTeamMemberships"
    name: str
    permissions: "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerTeamPermissions"
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerTeamMemberships(
    BaseModel
):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerTeamPermissions(
    BaseModel
):
    create_membership: bool = Field(alias="createMembership")
    delete: bool
    update: bool


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    avatar: "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerUserAvatar(
    BaseModel
):
    color: str
    initials: str


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisPermissions(
    BaseModel
):
    delete: bool
    run: bool
    update: bool


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisStack(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisStackOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisStackOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisStackOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisStackOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTransportNetwork(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTransportNetworkOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTransportNetworkOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTransportNetworkOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTransportNetworkOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTravelTimes(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTravelTimesOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTravelTimesOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTravelTimesOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTravelTimesOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisWater(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisWaterOwnerTeam",
                "CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisWaterOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisWaterOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisWaterOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


CreateAccessmodAccessibilityAnalysis.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysis.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysis.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisBarrier.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisDem.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisFrictionSurface.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisHealthFacilities.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisLandCover.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerTeam.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisOwnerUser.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisStack.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTransportNetwork.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisTravelTimes.model_rebuild()
CreateAccessmodAccessibilityAnalysisCreateAccessmodAccessibilityAnalysisAnalysisWater.model_rebuild()
