# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import PipelineType, UpdateTemplateError


class UpdatePipelineTemplate(BaseModel):
    update_pipeline_template: "UpdatePipelineTemplateUpdatePipelineTemplate" = Field(
        alias="updatePipelineTemplate"
    )


class UpdatePipelineTemplateUpdatePipelineTemplate(BaseModel):
    errors: List[UpdateTemplateError]
    success: bool
    template: Optional["UpdatePipelineTemplateUpdatePipelineTemplateTemplate"]


class UpdatePipelineTemplateUpdatePipelineTemplateTemplate(BaseModel):
    code: str
    config: Optional[str]
    current_version: Optional[
        "UpdatePipelineTemplateUpdatePipelineTemplateTemplateCurrentVersion"
    ] = Field(alias="currentVersion")
    description: Optional[str]
    id: Any
    name: str
    permissions: "UpdatePipelineTemplateUpdatePipelineTemplateTemplatePermissions"
    source_pipeline: Optional[
        "UpdatePipelineTemplateUpdatePipelineTemplateTemplateSourcePipeline"
    ] = Field(alias="sourcePipeline")
    updated_at: Any = Field(alias="updatedAt")
    versions: "UpdatePipelineTemplateUpdatePipelineTemplateTemplateVersions"
    workspace: Optional["UpdatePipelineTemplateUpdatePipelineTemplateTemplateWorkspace"]


class UpdatePipelineTemplateUpdatePipelineTemplateTemplateCurrentVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class UpdatePipelineTemplateUpdatePipelineTemplateTemplatePermissions(BaseModel):
    delete: bool
    update: bool


class UpdatePipelineTemplateUpdatePipelineTemplateTemplateSourcePipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


class UpdatePipelineTemplateUpdatePipelineTemplateTemplateVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class UpdatePipelineTemplateUpdatePipelineTemplateTemplateWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


UpdatePipelineTemplate.model_rebuild()
UpdatePipelineTemplateUpdatePipelineTemplate.model_rebuild()
UpdatePipelineTemplateUpdatePipelineTemplateTemplate.model_rebuild()
