# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class DatabaseTable(BaseModel):
    database_table: Optional["DatabaseTableDatabaseTable"] = Field(
        alias="databaseTable"
    )


class DatabaseTableDatabaseTable(BaseModel):
    columns: List["DatabaseTableDatabaseTableColumns"]
    count: Optional[int]
    name: str
    rows: "DatabaseTableDatabaseTableRows"
    sample: Any


class DatabaseTableDatabaseTableColumns(BaseModel):
    name: str
    type: str


class DatabaseTableDatabaseTableRows(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    has_previous_page: bool = Field(alias="hasPreviousPage")
    items: List[Any]
    page_number: int = Field(alias="pageNumber")


DatabaseTable.model_rebuild()
DatabaseTableDatabaseTable.model_rebuild()
