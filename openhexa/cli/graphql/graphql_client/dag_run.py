# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import DAGRunStatus, DAGRunTrigger


class DagRun(BaseModel):
    dag_run: Optional["DagRunDagRun"] = Field(alias="dagRun")


class DagRunDagRun(BaseModel):
    config: Optional[Any]
    duration: Optional[int]
    execution_date: Optional[Any] = Field(alias="executionDate")
    external_id: Optional[str] = Field(alias="externalId")
    external_url: Optional[Any] = Field(alias="externalUrl")
    id: Any
    is_favorite: bool = Field(alias="isFavorite")
    label: Optional[str]
    last_refreshed_at: Optional[Any] = Field(alias="lastRefreshedAt")
    logs: Optional[str]
    messages: List["DagRunDagRunMessages"]
    outputs: List["DagRunDagRunOutputs"]
    progress: int
    status: DAGRunStatus
    trigger_mode: Optional[DAGRunTrigger] = Field(alias="triggerMode")
    user: Optional["DagRunDagRunUser"]


class DagRunDagRunMessages(BaseModel):
    message: str
    priority: str
    timestamp: Optional[Any]


class DagRunDagRunOutputs(BaseModel):
    title: str
    uri: str


class DagRunDagRunUser(BaseModel):
    avatar: "DagRunDagRunUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class DagRunDagRunUserAvatar(BaseModel):
    color: str
    initials: str


DagRun.model_rebuild()
DagRunDagRun.model_rebuild()
DagRunDagRunUser.model_rebuild()
