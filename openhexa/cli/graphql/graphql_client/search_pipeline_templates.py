# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class SearchPipelineTemplates(BaseModel):
    search_pipeline_templates: "SearchPipelineTemplatesSearchPipelineTemplates" = Field(
        alias="searchPipelineTemplates"
    )


class SearchPipelineTemplatesSearchPipelineTemplates(BaseModel):
    items: List["SearchPipelineTemplatesSearchPipelineTemplatesItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class SearchPipelineTemplatesSearchPipelineTemplatesItems(BaseModel):
    pipeline_template: (
        "SearchPipelineTemplatesSearchPipelineTemplatesItemsPipelineTemplate"
    ) = Field(alias="pipelineTemplate")
    score: float


class SearchPipelineTemplatesSearchPipelineTemplatesItemsPipelineTemplate(BaseModel):
    code: str
    config: Optional[str]
    description: Optional[str]
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


SearchPipelineTemplates.model_rebuild()
SearchPipelineTemplatesSearchPipelineTemplates.model_rebuild()
SearchPipelineTemplatesSearchPipelineTemplatesItems.model_rebuild()
