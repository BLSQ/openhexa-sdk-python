# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import FileType


class SearchFiles(BaseModel):
    search_files: "SearchFilesSearchFiles" = Field(alias="searchFiles")


class SearchFilesSearchFiles(BaseModel):
    items: List["SearchFilesSearchFilesItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class SearchFilesSearchFilesItems(BaseModel):
    file: "SearchFilesSearchFilesItemsFile"
    score: float
    workspace: "SearchFilesSearchFilesItemsWorkspace"


class SearchFilesSearchFilesItemsFile(BaseModel):
    key: str
    name: str
    path: str
    size: Optional[Any]
    type: FileType
    updated: Optional[Any]


class SearchFilesSearchFilesItemsWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


SearchFiles.model_rebuild()
SearchFilesSearchFiles.model_rebuild()
SearchFilesSearchFilesItems.model_rebuild()
