# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import SetMetadataAttributeError


class SetMetadataAttribute(BaseModel):
    set_metadata_attribute: "SetMetadataAttributeSetMetadataAttribute" = Field(
        alias="setMetadataAttribute"
    )


class SetMetadataAttributeSetMetadataAttribute(BaseModel):
    attribute: Optional["SetMetadataAttributeSetMetadataAttributeAttribute"]
    errors: List[SetMetadataAttributeError]
    success: bool


class SetMetadataAttributeSetMetadataAttributeAttribute(BaseModel):
    created_at: Any = Field(alias="createdAt")
    created_by: Optional[
        "SetMetadataAttributeSetMetadataAttributeAttributeCreatedBy"
    ] = Field(alias="createdBy")
    id: Any
    key: str
    label: Optional[str]
    system: bool
    updated_at: Any = Field(alias="updatedAt")
    updated_by: Optional[
        "SetMetadataAttributeSetMetadataAttributeAttributeUpdatedBy"
    ] = Field(alias="updatedBy")
    value: Optional[Any]


class SetMetadataAttributeSetMetadataAttributeAttributeCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class SetMetadataAttributeSetMetadataAttributeAttributeUpdatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


SetMetadataAttribute.model_rebuild()
SetMetadataAttributeSetMetadataAttribute.model_rebuild()
SetMetadataAttributeSetMetadataAttributeAttribute.model_rebuild()
