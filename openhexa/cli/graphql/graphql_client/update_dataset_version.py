# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import UpdateDatasetVersionError


class UpdateDatasetVersion(BaseModel):
    update_dataset_version: "UpdateDatasetVersionUpdateDatasetVersion" = Field(
        alias="updateDatasetVersion"
    )


class UpdateDatasetVersionUpdateDatasetVersion(BaseModel):
    errors: List[UpdateDatasetVersionError]
    success: bool
    version: Optional["UpdateDatasetVersionUpdateDatasetVersionVersion"]


class UpdateDatasetVersionUpdateDatasetVersionVersion(BaseModel):
    attributes: List["UpdateDatasetVersionUpdateDatasetVersionVersionAttributes"]
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["UpdateDatasetVersionUpdateDatasetVersionVersionCreatedBy"] = (
        Field(alias="createdBy")
    )
    dataset: "UpdateDatasetVersionUpdateDatasetVersionVersionDataset"
    file_by_name: Optional[
        "UpdateDatasetVersionUpdateDatasetVersionVersionFileByName"
    ] = Field(alias="fileByName")
    files: "UpdateDatasetVersionUpdateDatasetVersionVersionFiles"
    id: str
    name: str
    permissions: "UpdateDatasetVersionUpdateDatasetVersionVersionPermissions"
    target_id: Any = Field(alias="targetId")


class UpdateDatasetVersionUpdateDatasetVersionVersionAttributes(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    key: str
    label: Optional[str]
    system: bool
    updated_at: Any = Field(alias="updatedAt")
    value: Optional[Any]


class UpdateDatasetVersionUpdateDatasetVersionVersionCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateDatasetVersionUpdateDatasetVersionVersionDataset(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    id: str
    name: str
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")


class UpdateDatasetVersionUpdateDatasetVersionVersionFileByName(BaseModel):
    content_type: str = Field(alias="contentType")
    created_at: Any = Field(alias="createdAt")
    download_url: Optional[str] = Field(alias="downloadUrl")
    filename: str
    id: str
    properties: Optional[Any]
    size: Any
    target_id: Any = Field(alias="targetId")
    uri: str


class UpdateDatasetVersionUpdateDatasetVersionVersionFiles(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class UpdateDatasetVersionUpdateDatasetVersionVersionPermissions(BaseModel):
    delete: bool
    download: bool
    update: bool


UpdateDatasetVersion.model_rebuild()
UpdateDatasetVersionUpdateDatasetVersion.model_rebuild()
UpdateDatasetVersionUpdateDatasetVersionVersion.model_rebuild()
