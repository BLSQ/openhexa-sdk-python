# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    ParameterType,
    ParameterWidget,
    PipelineType,
    UpgradePipelineVersionFromTemplateError,
)


class UpgradePipelineVersionFromTemplate(BaseModel):
    upgrade_pipeline_version_from_template: (
        "UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplate"
    ) = Field(alias="upgradePipelineVersionFromTemplate")


class UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplate(BaseModel):
    errors: List[UpgradePipelineVersionFromTemplateError]
    pipeline_version: Optional[
        "UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersion"
    ] = Field(alias="pipelineVersion")
    success: bool


class UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersion(
    BaseModel
):
    config: Optional[Any]
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    external_link: Optional[Any] = Field(alias="externalLink")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    name: Optional[str]
    parameters: List[
        "UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionParameters"
    ]
    permissions: "UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionPermissions"
    pipeline: "UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionPipeline"
    template_version: Optional[
        "UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionTemplateVersion"
    ] = Field(alias="templateVersion")
    timeout: Optional[int]
    user: Optional[
        "UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionUser"
    ]
    version_name: str = Field(alias="versionName")
    version_number: int = Field(alias="versionNumber")
    zipfile: str


class UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionParameters(
    BaseModel
):
    choices: Optional[List[Any]]
    code: str
    connection: Optional[str]
    default: Optional[Any]
    help: Optional[str]
    multiple: bool
    name: str
    required: bool
    type: ParameterType
    widget: Optional[ParameterWidget]


class UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionPermissions(
    BaseModel
):
    delete: bool
    update: bool


class UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionPipeline(
    BaseModel
):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


class UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionTemplateVersion(
    BaseModel
):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersionUser(
    BaseModel
):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


UpgradePipelineVersionFromTemplate.model_rebuild()
UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplate.model_rebuild()
UpgradePipelineVersionFromTemplateUpgradePipelineVersionFromTemplatePipelineVersion.model_rebuild()
