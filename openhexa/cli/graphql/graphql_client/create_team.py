# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CreateTeamError


class CreateTeam(BaseModel):
    create_team: "CreateTeamCreateTeam" = Field(alias="createTeam")


class CreateTeamCreateTeam(BaseModel):
    errors: List[CreateTeamError]
    success: bool
    team: Optional["CreateTeamCreateTeamTeam"]


class CreateTeamCreateTeamTeam(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    memberships: "CreateTeamCreateTeamTeamMemberships"
    name: str
    permissions: "CreateTeamCreateTeamTeamPermissions"
    updated_at: Any = Field(alias="updatedAt")


class CreateTeamCreateTeamTeamMemberships(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class CreateTeamCreateTeamTeamPermissions(BaseModel):
    create_membership: bool = Field(alias="createMembership")
    delete: bool
    update: bool


CreateTeam.model_rebuild()
CreateTeamCreateTeam.model_rebuild()
CreateTeamCreateTeamTeam.model_rebuild()
