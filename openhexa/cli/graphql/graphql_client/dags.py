# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class Dags(BaseModel):
    dags: "DagsDags"


class DagsDags(BaseModel):
    items: List["DagsDagsItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DagsDagsItems(BaseModel):
    countries: List["DagsDagsItemsCountries"]
    description: Optional[str]
    external_id: str = Field(alias="externalId")
    external_url: Optional[Any] = Field(alias="externalUrl")
    form_code: Optional[str] = Field(alias="formCode")
    id: Any
    label: str
    runs: "DagsDagsItemsRuns"
    schedule: Optional[str]
    tags: List["DagsDagsItemsTags"]
    template: "DagsDagsItemsTemplate"
    user: Optional["DagsDagsItemsUser"]


class DagsDagsItemsCountries(BaseModel):
    alpha_3: str = Field(alias="alpha3")
    code: str
    flag: str
    name: str


class DagsDagsItemsRuns(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DagsDagsItemsTags(BaseModel):
    id: str
    name: str


class DagsDagsItemsTemplate(BaseModel):
    code: str
    description: Optional[str]
    sample_config: Optional[Any] = Field(alias="sampleConfig")


class DagsDagsItemsUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


Dags.model_rebuild()
DagsDags.model_rebuild()
DagsDagsItems.model_rebuild()
