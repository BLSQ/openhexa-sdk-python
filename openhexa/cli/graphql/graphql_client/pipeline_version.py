# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    ParameterType,
    ParameterWidget,
    PipelineNotificationLevel,
    PipelineType,
)


class PipelineVersion(BaseModel):
    pipeline_version: Optional["PipelineVersionPipelineVersion"] = Field(
        alias="pipelineVersion"
    )


class PipelineVersionPipelineVersion(BaseModel):
    config: Optional[Any]
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    external_link: Optional[Any] = Field(alias="externalLink")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    name: Optional[str]
    parameters: List["PipelineVersionPipelineVersionParameters"]
    permissions: "PipelineVersionPipelineVersionPermissions"
    pipeline: "PipelineVersionPipelineVersionPipeline"
    template_version: Optional["PipelineVersionPipelineVersionTemplateVersion"] = Field(
        alias="templateVersion"
    )
    timeout: Optional[int]
    user: Optional["PipelineVersionPipelineVersionUser"]
    version_name: str = Field(alias="versionName")
    version_number: int = Field(alias="versionNumber")
    zipfile: str


class PipelineVersionPipelineVersionParameters(BaseModel):
    choices: Optional[List[Any]]
    code: str
    connection: Optional[str]
    default: Optional[Any]
    help: Optional[str]
    multiple: bool
    name: str
    required: bool
    type: ParameterType
    widget: Optional[ParameterWidget]


class PipelineVersionPipelineVersionPermissions(BaseModel):
    delete: bool
    update: bool


class PipelineVersionPipelineVersionPipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    current_version: Optional[
        "PipelineVersionPipelineVersionPipelineCurrentVersion"
    ] = Field(alias="currentVersion")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    new_template_versions: List[
        "PipelineVersionPipelineVersionPipelineNewTemplateVersions"
    ] = Field(alias="newTemplateVersions")
    notebook_path: Optional[str] = Field(alias="notebookPath")
    permissions: "PipelineVersionPipelineVersionPipelinePermissions"
    recipients: List["PipelineVersionPipelineVersionPipelineRecipients"]
    runs: "PipelineVersionPipelineVersionPipelineRuns"
    schedule: Optional[str]
    source_template: Optional[
        "PipelineVersionPipelineVersionPipelineSourceTemplate"
    ] = Field(alias="sourceTemplate")
    template: Optional["PipelineVersionPipelineVersionPipelineTemplate"]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    versions: "PipelineVersionPipelineVersionPipelineVersions"
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")
    workspace: "PipelineVersionPipelineVersionPipelineWorkspace"


class PipelineVersionPipelineVersionPipelineCurrentVersion(BaseModel):
    config: Optional[Any]
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    external_link: Optional[Any] = Field(alias="externalLink")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    name: Optional[str]
    timeout: Optional[int]
    version_name: str = Field(alias="versionName")
    version_number: int = Field(alias="versionNumber")
    zipfile: str


class PipelineVersionPipelineVersionPipelineNewTemplateVersions(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class PipelineVersionPipelineVersionPipelinePermissions(BaseModel):
    create_version: bool = Field(alias="createVersion")
    delete: bool
    run: bool
    schedule: bool
    stop_pipeline: bool = Field(alias="stopPipeline")
    update: bool


class PipelineVersionPipelineVersionPipelineRecipients(BaseModel):
    id: Any
    notification_level: PipelineNotificationLevel = Field(alias="notificationLevel")


class PipelineVersionPipelineVersionPipelineRuns(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelineVersionPipelineVersionPipelineSourceTemplate(BaseModel):
    code: str
    config: Optional[str]
    description: Optional[str]
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class PipelineVersionPipelineVersionPipelineTemplate(BaseModel):
    code: str
    config: Optional[str]
    description: Optional[str]
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class PipelineVersionPipelineVersionPipelineVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelineVersionPipelineVersionPipelineWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class PipelineVersionPipelineVersionTemplateVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    permissions: "PipelineVersionPipelineVersionTemplateVersionPermissions"
    template: "PipelineVersionPipelineVersionTemplateVersionTemplate"
    user: Optional["PipelineVersionPipelineVersionTemplateVersionUser"]
    version_number: int = Field(alias="versionNumber")


class PipelineVersionPipelineVersionTemplateVersionPermissions(BaseModel):
    delete: bool
    update: bool


class PipelineVersionPipelineVersionTemplateVersionTemplate(BaseModel):
    code: str
    config: Optional[str]
    description: Optional[str]
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class PipelineVersionPipelineVersionTemplateVersionUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PipelineVersionPipelineVersionUser(BaseModel):
    avatar: "PipelineVersionPipelineVersionUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PipelineVersionPipelineVersionUserAvatar(BaseModel):
    color: str
    initials: str


PipelineVersion.model_rebuild()
PipelineVersionPipelineVersion.model_rebuild()
PipelineVersionPipelineVersionPipeline.model_rebuild()
PipelineVersionPipelineVersionTemplateVersion.model_rebuild()
PipelineVersionPipelineVersionUser.model_rebuild()
