# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import UpdateWebappError


class UpdateWebapp(BaseModel):
    update_webapp: "UpdateWebappUpdateWebapp" = Field(alias="updateWebapp")


class UpdateWebappUpdateWebapp(BaseModel):
    errors: List[UpdateWebappError]
    success: bool
    webapp: Optional["UpdateWebappUpdateWebappWebapp"]


class UpdateWebappUpdateWebappWebapp(BaseModel):
    created_by: "UpdateWebappUpdateWebappWebappCreatedBy" = Field(alias="createdBy")
    description: Optional[str]
    icon: Optional[str]
    id: Any
    is_favorite: bool = Field(alias="isFavorite")
    name: str
    permissions: "UpdateWebappUpdateWebappWebappPermissions"
    url: str
    workspace: "UpdateWebappUpdateWebappWebappWorkspace"


class UpdateWebappUpdateWebappWebappCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateWebappUpdateWebappWebappPermissions(BaseModel):
    delete: bool
    update: bool


class UpdateWebappUpdateWebappWebappWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


UpdateWebapp.model_rebuild()
UpdateWebappUpdateWebapp.model_rebuild()
UpdateWebappUpdateWebappWebapp.model_rebuild()
