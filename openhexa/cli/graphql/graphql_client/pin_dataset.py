# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import PinDatasetError


class PinDataset(BaseModel):
    pin_dataset: "PinDatasetPinDataset" = Field(alias="pinDataset")


class PinDatasetPinDataset(BaseModel):
    errors: List[PinDatasetError]
    link: Optional["PinDatasetPinDatasetLink"]
    success: bool


class PinDatasetPinDatasetLink(BaseModel):
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["PinDatasetPinDatasetLinkCreatedBy"] = Field(alias="createdBy")
    dataset: "PinDatasetPinDatasetLinkDataset"
    id: str
    is_pinned: bool = Field(alias="isPinned")
    permissions: "PinDatasetPinDatasetLinkPermissions"
    workspace: "PinDatasetPinDatasetLinkWorkspace"


class PinDatasetPinDatasetLinkCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PinDatasetPinDatasetLinkDataset(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    id: str
    name: str
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")


class PinDatasetPinDatasetLinkPermissions(BaseModel):
    delete: bool
    pin: bool


class PinDatasetPinDatasetLinkWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


PinDataset.model_rebuild()
PinDatasetPinDataset.model_rebuild()
PinDatasetPinDatasetLink.model_rebuild()
