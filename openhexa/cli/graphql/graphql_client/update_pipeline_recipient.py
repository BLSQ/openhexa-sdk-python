# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import PipelineNotificationLevel, PipelineRecipientError, PipelineType


class UpdatePipelineRecipient(BaseModel):
    update_pipeline_recipient: "UpdatePipelineRecipientUpdatePipelineRecipient" = Field(
        alias="updatePipelineRecipient"
    )


class UpdatePipelineRecipientUpdatePipelineRecipient(BaseModel):
    errors: List[PipelineRecipientError]
    recipient: Optional["UpdatePipelineRecipientUpdatePipelineRecipientRecipient"]
    success: bool


class UpdatePipelineRecipientUpdatePipelineRecipientRecipient(BaseModel):
    id: Any
    notification_level: PipelineNotificationLevel = Field(alias="notificationLevel")
    pipeline: "UpdatePipelineRecipientUpdatePipelineRecipientRecipientPipeline"
    user: "UpdatePipelineRecipientUpdatePipelineRecipientRecipientUser"


class UpdatePipelineRecipientUpdatePipelineRecipientRecipientPipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


class UpdatePipelineRecipientUpdatePipelineRecipientRecipientUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


UpdatePipelineRecipient.model_rebuild()
UpdatePipelineRecipientUpdatePipelineRecipient.model_rebuild()
UpdatePipelineRecipientUpdatePipelineRecipientRecipient.model_rebuild()
