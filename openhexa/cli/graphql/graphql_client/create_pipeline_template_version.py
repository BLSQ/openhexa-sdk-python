# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CreatePipelineTemplateVersionError, PipelineType


class CreatePipelineTemplateVersion(BaseModel):
    create_pipeline_template_version: (
        "CreatePipelineTemplateVersionCreatePipelineTemplateVersion"
    ) = Field(alias="createPipelineTemplateVersion")


class CreatePipelineTemplateVersionCreatePipelineTemplateVersion(BaseModel):
    errors: Optional[List[CreatePipelineTemplateVersionError]]
    pipeline_template: Optional[
        "CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplate"
    ] = Field(alias="pipelineTemplate")
    success: bool


class CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplate(
    BaseModel
):
    code: str
    config: Optional[str]
    current_version: Optional[
        "CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplateCurrentVersion"
    ] = Field(alias="currentVersion")
    description: Optional[str]
    id: Any
    name: str
    permissions: "CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplatePermissions"
    source_pipeline: Optional[
        "CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplateSourcePipeline"
    ] = Field(alias="sourcePipeline")
    updated_at: Any = Field(alias="updatedAt")
    versions: "CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplateVersions"
    workspace: Optional[
        "CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplateWorkspace"
    ]


class CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplateCurrentVersion(
    BaseModel
):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplatePermissions(
    BaseModel
):
    delete: bool
    update: bool


class CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplateSourcePipeline(
    BaseModel
):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


class CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplateVersions(
    BaseModel
):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplateWorkspace(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


CreatePipelineTemplateVersion.model_rebuild()
CreatePipelineTemplateVersionCreatePipelineTemplateVersion.model_rebuild()
CreatePipelineTemplateVersionCreatePipelineTemplateVersionPipelineTemplate.model_rebuild()
