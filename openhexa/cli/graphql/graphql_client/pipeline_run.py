# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    BucketObjectType,
    MessagePriority,
    ParameterType,
    ParameterWidget,
    PipelineNotificationLevel,
    PipelineRunStatus,
    PipelineRunTrigger,
    PipelineType,
)


class PipelineRun(BaseModel):
    pipeline_run: Optional["PipelineRunPipelineRun"] = Field(alias="pipelineRun")


class PipelineRunPipelineRun(BaseModel):
    code: str
    config: Any
    dataset_versions: List["PipelineRunPipelineRunDatasetVersions"] = Field(
        alias="datasetVersions"
    )
    duration: Optional[int]
    enable_debug_logs: bool = Field(alias="enableDebugLogs")
    execution_date: Optional[Any] = Field(alias="executionDate")
    id: Any
    logs: Optional[str]
    messages: List["PipelineRunPipelineRunMessages"]
    outputs: List[
        Annotated[
            Union[
                "PipelineRunPipelineRunOutputsBucketObject",
                "PipelineRunPipelineRunOutputsDatabaseTable",
                "PipelineRunPipelineRunOutputsGenericOutput",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    pipeline: "PipelineRunPipelineRunPipeline"
    progress: int
    run_id: Any
    send_mail_notifications: bool = Field(alias="sendMailNotifications")
    status: PipelineRunStatus
    stopped_by: Optional["PipelineRunPipelineRunStoppedBy"] = Field(alias="stoppedBy")
    timeout: Optional[int]
    trigger_mode: Optional[PipelineRunTrigger] = Field(alias="triggerMode")
    user: Optional["PipelineRunPipelineRunUser"]
    version: Optional["PipelineRunPipelineRunVersion"]


class PipelineRunPipelineRunDatasetVersions(BaseModel):
    attributes: List["PipelineRunPipelineRunDatasetVersionsAttributes"]
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["PipelineRunPipelineRunDatasetVersionsCreatedBy"] = Field(
        alias="createdBy"
    )
    dataset: "PipelineRunPipelineRunDatasetVersionsDataset"
    file_by_name: Optional["PipelineRunPipelineRunDatasetVersionsFileByName"] = Field(
        alias="fileByName"
    )
    files: "PipelineRunPipelineRunDatasetVersionsFiles"
    id: str
    name: str
    permissions: "PipelineRunPipelineRunDatasetVersionsPermissions"
    target_id: Any = Field(alias="targetId")


class PipelineRunPipelineRunDatasetVersionsAttributes(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    key: str
    label: Optional[str]
    system: bool
    updated_at: Any = Field(alias="updatedAt")
    value: Optional[Any]


class PipelineRunPipelineRunDatasetVersionsCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PipelineRunPipelineRunDatasetVersionsDataset(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    id: str
    name: str
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")


class PipelineRunPipelineRunDatasetVersionsFileByName(BaseModel):
    content_type: str = Field(alias="contentType")
    created_at: Any = Field(alias="createdAt")
    download_url: Optional[str] = Field(alias="downloadUrl")
    filename: str
    id: str
    properties: Optional[Any]
    size: Any
    target_id: Any = Field(alias="targetId")
    uri: str


class PipelineRunPipelineRunDatasetVersionsFiles(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelineRunPipelineRunDatasetVersionsPermissions(BaseModel):
    delete: bool
    download: bool
    update: bool


class PipelineRunPipelineRunMessages(BaseModel):
    message: str
    priority: MessagePriority
    timestamp: Optional[Any]


class PipelineRunPipelineRunOutputsBucketObject(BaseModel):
    typename__: Literal["BucketObject"] = Field(alias="__typename")
    key: str
    name: str
    path: str
    size: Optional[Any]
    type: BucketObjectType
    updated_at: Optional[Any] = Field(alias="updatedAt")


class PipelineRunPipelineRunOutputsDatabaseTable(BaseModel):
    typename__: Literal["DatabaseTable"] = Field(alias="__typename")
    columns: List["PipelineRunPipelineRunOutputsDatabaseTableColumns"]
    count: Optional[int]
    name: str
    rows: "PipelineRunPipelineRunOutputsDatabaseTableRows"
    sample: Any


class PipelineRunPipelineRunOutputsDatabaseTableColumns(BaseModel):
    name: str
    type: str


class PipelineRunPipelineRunOutputsDatabaseTableRows(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    has_previous_page: bool = Field(alias="hasPreviousPage")
    items: List[Any]
    page_number: int = Field(alias="pageNumber")


class PipelineRunPipelineRunOutputsGenericOutput(BaseModel):
    typename__: Literal["GenericOutput"] = Field(alias="__typename")
    generic_name: Optional[str] = Field(alias="genericName")
    generic_type: str = Field(alias="genericType")
    generic_uri: str = Field(alias="genericUri")


class PipelineRunPipelineRunPipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    current_version: Optional["PipelineRunPipelineRunPipelineCurrentVersion"] = Field(
        alias="currentVersion"
    )
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    new_template_versions: List["PipelineRunPipelineRunPipelineNewTemplateVersions"] = (
        Field(alias="newTemplateVersions")
    )
    notebook_path: Optional[str] = Field(alias="notebookPath")
    permissions: "PipelineRunPipelineRunPipelinePermissions"
    recipients: List["PipelineRunPipelineRunPipelineRecipients"]
    runs: "PipelineRunPipelineRunPipelineRuns"
    schedule: Optional[str]
    source_template: Optional["PipelineRunPipelineRunPipelineSourceTemplate"] = Field(
        alias="sourceTemplate"
    )
    template: Optional["PipelineRunPipelineRunPipelineTemplate"]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    versions: "PipelineRunPipelineRunPipelineVersions"
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")
    workspace: "PipelineRunPipelineRunPipelineWorkspace"


class PipelineRunPipelineRunPipelineCurrentVersion(BaseModel):
    config: Optional[Any]
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    external_link: Optional[Any] = Field(alias="externalLink")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    name: Optional[str]
    timeout: Optional[int]
    version_name: str = Field(alias="versionName")
    version_number: int = Field(alias="versionNumber")
    zipfile: str


class PipelineRunPipelineRunPipelineNewTemplateVersions(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class PipelineRunPipelineRunPipelinePermissions(BaseModel):
    create_version: bool = Field(alias="createVersion")
    delete: bool
    run: bool
    schedule: bool
    stop_pipeline: bool = Field(alias="stopPipeline")
    update: bool


class PipelineRunPipelineRunPipelineRecipients(BaseModel):
    id: Any
    notification_level: PipelineNotificationLevel = Field(alias="notificationLevel")


class PipelineRunPipelineRunPipelineRuns(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelineRunPipelineRunPipelineSourceTemplate(BaseModel):
    code: str
    config: Optional[str]
    description: Optional[str]
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class PipelineRunPipelineRunPipelineTemplate(BaseModel):
    code: str
    config: Optional[str]
    description: Optional[str]
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class PipelineRunPipelineRunPipelineVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelineRunPipelineRunPipelineWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class PipelineRunPipelineRunStoppedBy(BaseModel):
    avatar: "PipelineRunPipelineRunStoppedByAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PipelineRunPipelineRunStoppedByAvatar(BaseModel):
    color: str
    initials: str


class PipelineRunPipelineRunUser(BaseModel):
    avatar: "PipelineRunPipelineRunUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PipelineRunPipelineRunUserAvatar(BaseModel):
    color: str
    initials: str


class PipelineRunPipelineRunVersion(BaseModel):
    config: Optional[Any]
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    external_link: Optional[Any] = Field(alias="externalLink")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    name: Optional[str]
    parameters: List["PipelineRunPipelineRunVersionParameters"]
    permissions: "PipelineRunPipelineRunVersionPermissions"
    pipeline: "PipelineRunPipelineRunVersionPipeline"
    template_version: Optional["PipelineRunPipelineRunVersionTemplateVersion"] = Field(
        alias="templateVersion"
    )
    timeout: Optional[int]
    user: Optional["PipelineRunPipelineRunVersionUser"]
    version_name: str = Field(alias="versionName")
    version_number: int = Field(alias="versionNumber")
    zipfile: str


class PipelineRunPipelineRunVersionParameters(BaseModel):
    choices: Optional[List[Any]]
    code: str
    connection: Optional[str]
    default: Optional[Any]
    help: Optional[str]
    multiple: bool
    name: str
    required: bool
    type: ParameterType
    widget: Optional[ParameterWidget]


class PipelineRunPipelineRunVersionPermissions(BaseModel):
    delete: bool
    update: bool


class PipelineRunPipelineRunVersionPipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


class PipelineRunPipelineRunVersionTemplateVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class PipelineRunPipelineRunVersionUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


PipelineRun.model_rebuild()
PipelineRunPipelineRun.model_rebuild()
PipelineRunPipelineRunDatasetVersions.model_rebuild()
PipelineRunPipelineRunOutputsDatabaseTable.model_rebuild()
PipelineRunPipelineRunPipeline.model_rebuild()
PipelineRunPipelineRunStoppedBy.model_rebuild()
PipelineRunPipelineRunUser.model_rebuild()
PipelineRunPipelineRunVersion.model_rebuild()
