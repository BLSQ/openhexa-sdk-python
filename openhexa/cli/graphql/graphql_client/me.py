# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class Me(BaseModel):
    me: "MeMe"


class MeMe(BaseModel):
    features: List["MeMeFeatures"]
    has_two_factor_enabled: bool = Field(alias="hasTwoFactorEnabled")
    permissions: "MeMePermissions"
    user: Optional["MeMeUser"]


class MeMeFeatures(BaseModel):
    code: str


class MeMePermissions(BaseModel):
    admin_panel: bool = Field(alias="adminPanel")
    create_accessmod_project: bool = Field(alias="createAccessmodProject")
    create_team: bool = Field(alias="createTeam")
    create_workspace: bool = Field(alias="createWorkspace")
    manage_accessmod_access_requests: bool = Field(
        alias="manageAccessmodAccessRequests"
    )
    super_user: bool = Field(alias="superUser")


class MeMeUser(BaseModel):
    avatar: "MeMeUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class MeMeUserAvatar(BaseModel):
    color: str
    initials: str


Me.model_rebuild()
MeMe.model_rebuild()
MeMeUser.model_rebuild()
