# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import LinkDatasetError


class LinkDataset(BaseModel):
    link_dataset: "LinkDatasetLinkDataset" = Field(alias="linkDataset")


class LinkDatasetLinkDataset(BaseModel):
    errors: List[LinkDatasetError]
    link: Optional["LinkDatasetLinkDatasetLink"]
    success: bool


class LinkDatasetLinkDatasetLink(BaseModel):
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["LinkDatasetLinkDatasetLinkCreatedBy"] = Field(
        alias="createdBy"
    )
    dataset: "LinkDatasetLinkDatasetLinkDataset"
    id: str
    is_pinned: bool = Field(alias="isPinned")
    permissions: "LinkDatasetLinkDatasetLinkPermissions"
    workspace: "LinkDatasetLinkDatasetLinkWorkspace"


class LinkDatasetLinkDatasetLinkCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class LinkDatasetLinkDatasetLinkDataset(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    id: str
    name: str
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")


class LinkDatasetLinkDatasetLinkPermissions(BaseModel):
    delete: bool
    pin: bool


class LinkDatasetLinkDatasetLinkWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


LinkDataset.model_rebuild()
LinkDatasetLinkDataset.model_rebuild()
LinkDatasetLinkDatasetLink.model_rebuild()
