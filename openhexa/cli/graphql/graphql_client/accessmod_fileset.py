# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AccessmodFilesetFormat,
    AccessmodFilesetMode,
    AccessmodFilesetRoleCode,
    AccessmodFilesetStatus,
    MembershipRole,
)


class AccessmodFileset(BaseModel):
    accessmod_fileset: Optional["AccessmodFilesetAccessmodFileset"] = Field(
        alias="accessmodFileset"
    )


class AccessmodFilesetAccessmodFileset(BaseModel):
    author: "AccessmodFilesetAccessmodFilesetAuthor"
    created_at: Any = Field(alias="createdAt")
    files: List["AccessmodFilesetAccessmodFilesetFiles"]
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "AccessmodFilesetAccessmodFilesetOwnerTeam",
                "AccessmodFilesetAccessmodFilesetOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    permissions: "AccessmodFilesetAccessmodFilesetPermissions"
    role: "AccessmodFilesetAccessmodFilesetRole"
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class AccessmodFilesetAccessmodFilesetAuthor(BaseModel):
    avatar: "AccessmodFilesetAccessmodFilesetAuthorAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class AccessmodFilesetAccessmodFilesetAuthorAvatar(BaseModel):
    color: str
    initials: str


class AccessmodFilesetAccessmodFilesetFiles(BaseModel):
    created_at: Any = Field(alias="createdAt")
    fileset: Optional["AccessmodFilesetAccessmodFilesetFilesFileset"]
    id: str
    mime_type: str = Field(alias="mimeType")
    name: str
    updated_at: Any = Field(alias="updatedAt")
    uri: str


class AccessmodFilesetAccessmodFilesetFilesFileset(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "AccessmodFilesetAccessmodFilesetFilesFilesetOwnerTeam",
                "AccessmodFilesetAccessmodFilesetFilesFilesetOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class AccessmodFilesetAccessmodFilesetFilesFilesetOwnerTeam(BaseModel):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class AccessmodFilesetAccessmodFilesetFilesFilesetOwnerUser(BaseModel):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class AccessmodFilesetAccessmodFilesetOwnerTeam(BaseModel):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    memberships: "AccessmodFilesetAccessmodFilesetOwnerTeamMemberships"
    name: str
    permissions: "AccessmodFilesetAccessmodFilesetOwnerTeamPermissions"
    updated_at: Any = Field(alias="updatedAt")


class AccessmodFilesetAccessmodFilesetOwnerTeamMemberships(BaseModel):
    items: List["AccessmodFilesetAccessmodFilesetOwnerTeamMembershipsItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class AccessmodFilesetAccessmodFilesetOwnerTeamMembershipsItems(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    role: MembershipRole
    updated_at: Any = Field(alias="updatedAt")


class AccessmodFilesetAccessmodFilesetOwnerTeamPermissions(BaseModel):
    create_membership: bool = Field(alias="createMembership")
    delete: bool
    update: bool


class AccessmodFilesetAccessmodFilesetOwnerUser(BaseModel):
    typename__: Literal["User"] = Field(alias="__typename")
    avatar: "AccessmodFilesetAccessmodFilesetOwnerUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class AccessmodFilesetAccessmodFilesetOwnerUserAvatar(BaseModel):
    color: str
    initials: str


class AccessmodFilesetAccessmodFilesetPermissions(BaseModel):
    create_file: bool = Field(alias="createFile")
    delete: bool
    update: bool


class AccessmodFilesetAccessmodFilesetRole(BaseModel):
    code: AccessmodFilesetRoleCode
    created_at: Any = Field(alias="createdAt")
    format: AccessmodFilesetFormat
    id: str
    name: str
    updated_at: Any = Field(alias="updatedAt")


AccessmodFileset.model_rebuild()
AccessmodFilesetAccessmodFileset.model_rebuild()
AccessmodFilesetAccessmodFilesetAuthor.model_rebuild()
AccessmodFilesetAccessmodFilesetFiles.model_rebuild()
AccessmodFilesetAccessmodFilesetFilesFileset.model_rebuild()
AccessmodFilesetAccessmodFilesetOwnerTeam.model_rebuild()
AccessmodFilesetAccessmodFilesetOwnerTeamMemberships.model_rebuild()
AccessmodFilesetAccessmodFilesetOwnerUser.model_rebuild()
