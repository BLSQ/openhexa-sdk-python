# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import MembershipRole


class Team(BaseModel):
    team: Optional["TeamTeam"]


class TeamTeam(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    memberships: "TeamTeamMemberships"
    name: str
    permissions: "TeamTeamPermissions"
    updated_at: Any = Field(alias="updatedAt")


class TeamTeamMemberships(BaseModel):
    items: List["TeamTeamMembershipsItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class TeamTeamMembershipsItems(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    role: MembershipRole
    updated_at: Any = Field(alias="updatedAt")


class TeamTeamPermissions(BaseModel):
    create_membership: bool = Field(alias="createMembership")
    delete: bool
    update: bool


Team.model_rebuild()
TeamTeam.model_rebuild()
TeamTeamMemberships.model_rebuild()
