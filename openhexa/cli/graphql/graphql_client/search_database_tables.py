# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class SearchDatabaseTables(BaseModel):
    search_database_tables: "SearchDatabaseTablesSearchDatabaseTables" = Field(
        alias="searchDatabaseTables"
    )


class SearchDatabaseTablesSearchDatabaseTables(BaseModel):
    items: List["SearchDatabaseTablesSearchDatabaseTablesItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class SearchDatabaseTablesSearchDatabaseTablesItems(BaseModel):
    database_table: "SearchDatabaseTablesSearchDatabaseTablesItemsDatabaseTable" = (
        Field(alias="databaseTable")
    )
    score: float
    workspace: "SearchDatabaseTablesSearchDatabaseTablesItemsWorkspace"


class SearchDatabaseTablesSearchDatabaseTablesItemsDatabaseTable(BaseModel):
    count: Optional[int]
    name: str
    sample: Any


class SearchDatabaseTablesSearchDatabaseTablesItemsWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


SearchDatabaseTables.model_rebuild()
SearchDatabaseTablesSearchDatabaseTables.model_rebuild()
SearchDatabaseTablesSearchDatabaseTablesItems.model_rebuild()
