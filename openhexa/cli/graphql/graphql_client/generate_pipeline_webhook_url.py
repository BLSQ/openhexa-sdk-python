# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    GeneratePipelineWebhookUrlError,
    PipelineNotificationLevel,
    PipelineType,
)


class GeneratePipelineWebhookUrl(BaseModel):
    generate_pipeline_webhook_url: (
        "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrl"
    ) = Field(alias="generatePipelineWebhookUrl")


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrl(BaseModel):
    errors: List[GeneratePipelineWebhookUrlError]
    pipeline: Optional["GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipeline"]
    success: bool


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    current_version: Optional[
        "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineCurrentVersion"
    ] = Field(alias="currentVersion")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    new_template_versions: List[
        "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineNewTemplateVersions"
    ] = Field(alias="newTemplateVersions")
    notebook_path: Optional[str] = Field(alias="notebookPath")
    permissions: (
        "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelinePermissions"
    )
    recipients: List[
        "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineRecipients"
    ]
    runs: "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineRuns"
    schedule: Optional[str]
    source_template: Optional[
        "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineSourceTemplate"
    ] = Field(alias="sourceTemplate")
    template: Optional[
        "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineTemplate"
    ]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    versions: "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineVersions"
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")
    workspace: "GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineWorkspace"


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineCurrentVersion(
    BaseModel
):
    config: Optional[Any]
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    external_link: Optional[Any] = Field(alias="externalLink")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    name: Optional[str]
    timeout: Optional[int]
    version_name: str = Field(alias="versionName")
    version_number: int = Field(alias="versionNumber")
    zipfile: str


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineNewTemplateVersions(
    BaseModel
):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelinePermissions(
    BaseModel
):
    create_version: bool = Field(alias="createVersion")
    delete: bool
    run: bool
    schedule: bool
    stop_pipeline: bool = Field(alias="stopPipeline")
    update: bool


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineRecipients(BaseModel):
    id: Any
    notification_level: PipelineNotificationLevel = Field(alias="notificationLevel")


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineRuns(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineSourceTemplate(
    BaseModel
):
    code: str
    config: Optional[str]
    description: Optional[str]
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineTemplate(BaseModel):
    code: str
    config: Optional[str]
    description: Optional[str]
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipelineWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


GeneratePipelineWebhookUrl.model_rebuild()
GeneratePipelineWebhookUrlGeneratePipelineWebhookUrl.model_rebuild()
GeneratePipelineWebhookUrlGeneratePipelineWebhookUrlPipeline.model_rebuild()
