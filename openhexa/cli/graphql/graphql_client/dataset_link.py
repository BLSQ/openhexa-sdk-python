# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ConnectionType


class DatasetLink(BaseModel):
    dataset_link: Optional["DatasetLinkDatasetLink"] = Field(alias="datasetLink")


class DatasetLinkDatasetLink(BaseModel):
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["DatasetLinkDatasetLinkCreatedBy"] = Field(alias="createdBy")
    dataset: "DatasetLinkDatasetLinkDataset"
    id: str
    is_pinned: bool = Field(alias="isPinned")
    permissions: "DatasetLinkDatasetLinkPermissions"
    workspace: "DatasetLinkDatasetLinkWorkspace"


class DatasetLinkDatasetLinkCreatedBy(BaseModel):
    avatar: "DatasetLinkDatasetLinkCreatedByAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class DatasetLinkDatasetLinkCreatedByAvatar(BaseModel):
    color: str
    initials: str


class DatasetLinkDatasetLinkDataset(BaseModel):
    attributes: List["DatasetLinkDatasetLinkDatasetAttributes"]
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["DatasetLinkDatasetLinkDatasetCreatedBy"] = Field(
        alias="createdBy"
    )
    description: Optional[str]
    id: str
    latest_version: Optional["DatasetLinkDatasetLinkDatasetLatestVersion"] = Field(
        alias="latestVersion"
    )
    links: "DatasetLinkDatasetLinkDatasetLinks"
    name: str
    permissions: "DatasetLinkDatasetLinkDatasetPermissions"
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")
    version: Optional["DatasetLinkDatasetLinkDatasetVersion"]
    versions: "DatasetLinkDatasetLinkDatasetVersions"
    workspace: Optional["DatasetLinkDatasetLinkDatasetWorkspace"]


class DatasetLinkDatasetLinkDatasetAttributes(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    key: str
    label: Optional[str]
    system: bool
    updated_at: Any = Field(alias="updatedAt")
    value: Optional[Any]


class DatasetLinkDatasetLinkDatasetCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class DatasetLinkDatasetLinkDatasetLatestVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class DatasetLinkDatasetLinkDatasetLinks(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkDatasetLinkDatasetPermissions(BaseModel):
    create_version: bool = Field(alias="createVersion")
    delete: bool
    update: bool


class DatasetLinkDatasetLinkDatasetVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class DatasetLinkDatasetLinkDatasetVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkDatasetLinkDatasetWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class DatasetLinkDatasetLinkPermissions(BaseModel):
    delete: bool
    pin: bool


class DatasetLinkDatasetLinkWorkspace(BaseModel):
    bucket: "DatasetLinkDatasetLinkWorkspaceBucket"
    connections: List["DatasetLinkDatasetLinkWorkspaceConnections"]
    countries: List["DatasetLinkDatasetLinkWorkspaceCountries"]
    created_at: Any = Field(alias="createdAt")
    created_by: "DatasetLinkDatasetLinkWorkspaceCreatedBy" = Field(alias="createdBy")
    datasets: "DatasetLinkDatasetLinkWorkspaceDatasets"
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    invitations: "DatasetLinkDatasetLinkWorkspaceInvitations"
    members: "DatasetLinkDatasetLinkWorkspaceMembers"
    name: str
    permissions: "DatasetLinkDatasetLinkWorkspacePermissions"
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class DatasetLinkDatasetLinkWorkspaceBucket(BaseModel):
    name: str


class DatasetLinkDatasetLinkWorkspaceConnections(BaseModel):
    typename__: Literal[
        "Connection",
        "CustomConnection",
        "DHIS2Connection",
        "GCSConnection",
        "IASOConnection",
        "PostgreSQLConnection",
        "S3Connection",
    ] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    id: str
    name: str
    slug: str
    type: ConnectionType
    updated_at: Optional[Any] = Field(alias="updatedAt")


class DatasetLinkDatasetLinkWorkspaceCountries(BaseModel):
    alpha_3: str = Field(alias="alpha3")
    code: str
    flag: str
    name: str


class DatasetLinkDatasetLinkWorkspaceCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class DatasetLinkDatasetLinkWorkspaceDatasets(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkDatasetLinkWorkspaceInvitations(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkDatasetLinkWorkspaceMembers(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkDatasetLinkWorkspacePermissions(BaseModel):
    create_connection: bool = Field(alias="createConnection")
    create_dataset: bool = Field(alias="createDataset")
    create_object: bool = Field(alias="createObject")
    create_pipeline: bool = Field(alias="createPipeline")
    create_pipeline_template_version: bool = Field(
        alias="createPipelineTemplateVersion"
    )
    delete: bool
    delete_database_table: bool = Field(alias="deleteDatabaseTable")
    delete_object: bool = Field(alias="deleteObject")
    download_object: bool = Field(alias="downloadObject")
    launch_notebook_server: bool = Field(alias="launchNotebookServer")
    manage_members: bool = Field(alias="manageMembers")
    update: bool


DatasetLink.model_rebuild()
DatasetLinkDatasetLink.model_rebuild()
DatasetLinkDatasetLinkCreatedBy.model_rebuild()
DatasetLinkDatasetLinkDataset.model_rebuild()
DatasetLinkDatasetLinkWorkspace.model_rebuild()
