# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CreateDatasetVersionError


class CreateDatasetVersion(BaseModel):
    create_dataset_version: "CreateDatasetVersionCreateDatasetVersion" = Field(
        alias="createDatasetVersion"
    )


class CreateDatasetVersionCreateDatasetVersion(BaseModel):
    errors: List[CreateDatasetVersionError]
    success: bool
    version: Optional["CreateDatasetVersionCreateDatasetVersionVersion"]


class CreateDatasetVersionCreateDatasetVersionVersion(BaseModel):
    attributes: List["CreateDatasetVersionCreateDatasetVersionVersionAttributes"]
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["CreateDatasetVersionCreateDatasetVersionVersionCreatedBy"] = (
        Field(alias="createdBy")
    )
    dataset: "CreateDatasetVersionCreateDatasetVersionVersionDataset"
    file_by_name: Optional[
        "CreateDatasetVersionCreateDatasetVersionVersionFileByName"
    ] = Field(alias="fileByName")
    files: "CreateDatasetVersionCreateDatasetVersionVersionFiles"
    id: str
    name: str
    permissions: "CreateDatasetVersionCreateDatasetVersionVersionPermissions"
    target_id: Any = Field(alias="targetId")


class CreateDatasetVersionCreateDatasetVersionVersionAttributes(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    key: str
    label: Optional[str]
    system: bool
    updated_at: Any = Field(alias="updatedAt")
    value: Optional[Any]


class CreateDatasetVersionCreateDatasetVersionVersionCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateDatasetVersionCreateDatasetVersionVersionDataset(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    id: str
    name: str
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")


class CreateDatasetVersionCreateDatasetVersionVersionFileByName(BaseModel):
    content_type: str = Field(alias="contentType")
    created_at: Any = Field(alias="createdAt")
    download_url: Optional[str] = Field(alias="downloadUrl")
    filename: str
    id: str
    properties: Optional[Any]
    size: Any
    target_id: Any = Field(alias="targetId")
    uri: str


class CreateDatasetVersionCreateDatasetVersionVersionFiles(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class CreateDatasetVersionCreateDatasetVersionVersionPermissions(BaseModel):
    delete: bool
    download: bool
    update: bool


CreateDatasetVersion.model_rebuild()
CreateDatasetVersionCreateDatasetVersion.model_rebuild()
CreateDatasetVersionCreateDatasetVersionVersion.model_rebuild()
