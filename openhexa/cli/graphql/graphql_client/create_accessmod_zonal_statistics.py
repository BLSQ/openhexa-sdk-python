# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AccessmodAnalysisStatus,
    AccessmodAnalysisType,
    AccessmodFilesetMode,
    AccessmodFilesetStatus,
    CreateAccessmodZonalStatisticsError,
)


class CreateAccessmodZonalStatistics(BaseModel):
    create_accessmod_zonal_statistics: (
        "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatistics"
    ) = Field(alias="createAccessmodZonalStatistics")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatistics(BaseModel):
    analysis: Optional[
        "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysis"
    ]
    errors: List[CreateAccessmodZonalStatisticsError]
    success: bool


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysis(BaseModel):
    author: "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisAuthor"
    boundaries: Optional[
        "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisBoundaries"
    ]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerTeam",
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    permissions: "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisPermissions"
    population: Optional[
        "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisPopulation"
    ]
    status: AccessmodAnalysisStatus
    time_thresholds: Optional[Any] = Field(alias="timeThresholds")
    travel_times: Optional[
        "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisTravelTimes"
    ] = Field(alias="travelTimes")
    type: AccessmodAnalysisType
    updated_at: Any = Field(alias="updatedAt")
    zonal_statistics_geo: Optional[
        "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsGeo"
    ] = Field(alias="zonalStatisticsGeo")
    zonal_statistics_table: Optional[
        "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsTable"
    ] = Field(alias="zonalStatisticsTable")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisAuthor(
    BaseModel
):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisBoundaries(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisBoundariesOwnerTeam",
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisBoundariesOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisBoundariesOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisBoundariesOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    memberships: "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerTeamMemberships"
    name: str
    permissions: "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerTeamPermissions"
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerTeamMemberships(
    BaseModel
):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerTeamPermissions(
    BaseModel
):
    create_membership: bool = Field(alias="createMembership")
    delete: bool
    update: bool


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    avatar: "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerUserAvatar(
    BaseModel
):
    color: str
    initials: str


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisPermissions(
    BaseModel
):
    delete: bool
    run: bool
    update: bool


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisPopulation(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisPopulationOwnerTeam",
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisPopulationOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisPopulationOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisPopulationOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisTravelTimes(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisTravelTimesOwnerTeam",
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisTravelTimesOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisTravelTimesOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisTravelTimesOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsGeo(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsGeoOwnerTeam",
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsGeoOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsGeoOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsGeoOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsTable(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsTableOwnerTeam",
                "CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsTableOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsTableOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsTableOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


CreateAccessmodZonalStatistics.model_rebuild()
CreateAccessmodZonalStatisticsCreateAccessmodZonalStatistics.model_rebuild()
CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysis.model_rebuild()
CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisBoundaries.model_rebuild()
CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerTeam.model_rebuild()
CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisOwnerUser.model_rebuild()
CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisPopulation.model_rebuild()
CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisTravelTimes.model_rebuild()
CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsGeo.model_rebuild()
CreateAccessmodZonalStatisticsCreateAccessmodZonalStatisticsAnalysisZonalStatisticsTable.model_rebuild()
