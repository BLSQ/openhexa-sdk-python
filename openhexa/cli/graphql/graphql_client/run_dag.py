# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import DAGRunStatus, DAGRunTrigger, RunDAGError


class RunDAG(BaseModel):
    run_dag: "RunDAGRunDag" = Field(alias="runDAG")


class RunDAGRunDag(BaseModel):
    dag: Optional["RunDAGRunDagDag"]
    dag_run: Optional["RunDAGRunDagDagRun"] = Field(alias="dagRun")
    errors: List[RunDAGError]
    success: bool


class RunDAGRunDagDag(BaseModel):
    countries: List["RunDAGRunDagDagCountries"]
    description: Optional[str]
    external_id: str = Field(alias="externalId")
    external_url: Optional[Any] = Field(alias="externalUrl")
    form_code: Optional[str] = Field(alias="formCode")
    id: Any
    label: str
    runs: "RunDAGRunDagDagRuns"
    schedule: Optional[str]
    tags: List["RunDAGRunDagDagTags"]
    template: "RunDAGRunDagDagTemplate"
    user: Optional["RunDAGRunDagDagUser"]


class RunDAGRunDagDagCountries(BaseModel):
    alpha_3: str = Field(alias="alpha3")
    code: str
    flag: str
    name: str


class RunDAGRunDagDagRuns(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class RunDAGRunDagDagTags(BaseModel):
    id: str
    name: str


class RunDAGRunDagDagTemplate(BaseModel):
    code: str
    description: Optional[str]
    sample_config: Optional[Any] = Field(alias="sampleConfig")


class RunDAGRunDagDagUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class RunDAGRunDagDagRun(BaseModel):
    config: Optional[Any]
    duration: Optional[int]
    execution_date: Optional[Any] = Field(alias="executionDate")
    external_id: Optional[str] = Field(alias="externalId")
    external_url: Optional[Any] = Field(alias="externalUrl")
    id: Any
    is_favorite: bool = Field(alias="isFavorite")
    label: Optional[str]
    last_refreshed_at: Optional[Any] = Field(alias="lastRefreshedAt")
    logs: Optional[str]
    messages: List["RunDAGRunDagDagRunMessages"]
    outputs: List["RunDAGRunDagDagRunOutputs"]
    progress: int
    status: DAGRunStatus
    trigger_mode: Optional[DAGRunTrigger] = Field(alias="triggerMode")
    user: Optional["RunDAGRunDagDagRunUser"]


class RunDAGRunDagDagRunMessages(BaseModel):
    message: str
    priority: str
    timestamp: Optional[Any]


class RunDAGRunDagDagRunOutputs(BaseModel):
    title: str
    uri: str


class RunDAGRunDagDagRunUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


RunDAG.model_rebuild()
RunDAGRunDag.model_rebuild()
RunDAGRunDagDag.model_rebuild()
RunDAGRunDagDagRun.model_rebuild()
