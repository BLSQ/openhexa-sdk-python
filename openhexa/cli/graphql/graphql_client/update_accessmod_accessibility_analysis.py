# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AccessmodAccessibilityAnalysisAlgorithm,
    AccessmodAnalysisStatus,
    AccessmodAnalysisType,
    AccessmodFilesetMode,
    AccessmodFilesetStatus,
    UpdateAccessmodAccessibilityAnalysisError,
)


class UpdateAccessmodAccessibilityAnalysis(BaseModel):
    update_accessmod_accessibility_analysis: (
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysis"
    ) = Field(alias="updateAccessmodAccessibilityAnalysis")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysis(
    BaseModel
):
    analysis: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysis"
    ]
    errors: List[UpdateAccessmodAccessibilityAnalysisError]
    success: bool


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysis(
    BaseModel
):
    algorithm: Optional[AccessmodAccessibilityAnalysisAlgorithm]
    author: "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisAuthor"
    barrier: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisBarrier"
    ]
    created_at: Any = Field(alias="createdAt")
    dem: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisDem"
    ]
    friction_surface: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisFrictionSurface"
    ] = Field(alias="frictionSurface")
    health_facilities: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisHealthFacilities"
    ] = Field(alias="healthFacilities")
    id: str
    invert_direction: Optional[bool] = Field(alias="invertDirection")
    knight_move: Optional[bool] = Field(alias="knightMove")
    land_cover: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisLandCover"
    ] = Field(alias="landCover")
    max_travel_time: Optional[int] = Field(alias="maxTravelTime")
    moving_speeds: Optional[Any] = Field(alias="movingSpeeds")
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    permissions: "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisPermissions"
    stack: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisStack"
    ]
    stack_priorities: Optional[Any] = Field(alias="stackPriorities")
    status: AccessmodAnalysisStatus
    transport_network: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTransportNetwork"
    ] = Field(alias="transportNetwork")
    travel_times: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTravelTimes"
    ] = Field(alias="travelTimes")
    type: AccessmodAnalysisType
    updated_at: Any = Field(alias="updatedAt")
    water: Optional[
        "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisWater"
    ]
    water_all_touched: Optional[bool] = Field(alias="waterAllTouched")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisAuthor(
    BaseModel
):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisBarrier(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisBarrierOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisBarrierOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisBarrierOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisBarrierOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisDem(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisDemOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisDemOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisDemOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisDemOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisFrictionSurface(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisFrictionSurfaceOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisFrictionSurfaceOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisFrictionSurfaceOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisFrictionSurfaceOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisHealthFacilities(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisHealthFacilitiesOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisHealthFacilitiesOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisHealthFacilitiesOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisHealthFacilitiesOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisLandCover(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisLandCoverOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisLandCoverOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisLandCoverOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisLandCoverOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    memberships: "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerTeamMemberships"
    name: str
    permissions: "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerTeamPermissions"
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerTeamMemberships(
    BaseModel
):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerTeamPermissions(
    BaseModel
):
    create_membership: bool = Field(alias="createMembership")
    delete: bool
    update: bool


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    avatar: "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerUserAvatar(
    BaseModel
):
    color: str
    initials: str


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisPermissions(
    BaseModel
):
    delete: bool
    run: bool
    update: bool


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisStack(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisStackOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisStackOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisStackOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisStackOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTransportNetwork(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTransportNetworkOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTransportNetworkOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTransportNetworkOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTransportNetworkOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTravelTimes(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTravelTimesOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTravelTimesOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTravelTimesOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTravelTimesOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisWater(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisWaterOwnerTeam",
                "UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisWaterOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisWaterOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisWaterOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


UpdateAccessmodAccessibilityAnalysis.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysis.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysis.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisBarrier.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisDem.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisFrictionSurface.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisHealthFacilities.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisLandCover.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerTeam.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisOwnerUser.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisStack.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTransportNetwork.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisTravelTimes.model_rebuild()
UpdateAccessmodAccessibilityAnalysisUpdateAccessmodAccessibilityAnalysisAnalysisWater.model_rebuild()
