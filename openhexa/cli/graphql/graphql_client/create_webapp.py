# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CreateWebappError


class CreateWebapp(BaseModel):
    create_webapp: "CreateWebappCreateWebapp" = Field(alias="createWebapp")


class CreateWebappCreateWebapp(BaseModel):
    errors: List[CreateWebappError]
    success: bool
    webapp: Optional["CreateWebappCreateWebappWebapp"]


class CreateWebappCreateWebappWebapp(BaseModel):
    created_by: "CreateWebappCreateWebappWebappCreatedBy" = Field(alias="createdBy")
    description: Optional[str]
    icon: Optional[str]
    id: Any
    is_favorite: bool = Field(alias="isFavorite")
    name: str
    permissions: "CreateWebappCreateWebappWebappPermissions"
    url: str
    workspace: "CreateWebappCreateWebappWebappWorkspace"


class CreateWebappCreateWebappWebappCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateWebappCreateWebappWebappPermissions(BaseModel):
    delete: bool
    update: bool


class CreateWebappCreateWebappWebappWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


CreateWebapp.model_rebuild()
CreateWebappCreateWebapp.model_rebuild()
CreateWebappCreateWebappWebapp.model_rebuild()
