# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import PipelineType


class SearchPipelines(BaseModel):
    search_pipelines: "SearchPipelinesSearchPipelines" = Field(alias="searchPipelines")


class SearchPipelinesSearchPipelines(BaseModel):
    items: List["SearchPipelinesSearchPipelinesItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class SearchPipelinesSearchPipelinesItems(BaseModel):
    pipeline: "SearchPipelinesSearchPipelinesItemsPipeline"
    score: float


class SearchPipelinesSearchPipelinesItemsPipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


SearchPipelines.model_rebuild()
SearchPipelinesSearchPipelines.model_rebuild()
SearchPipelinesSearchPipelinesItems.model_rebuild()
