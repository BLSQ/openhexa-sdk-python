# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ConnectionType


class ConnectionBySlug(BaseModel):
    connection_by_slug: Optional["ConnectionBySlugConnectionBySlug"] = Field(
        alias="connectionBySlug"
    )


class ConnectionBySlugConnectionBySlug(BaseModel):
    typename__: Literal[
        "Connection",
        "CustomConnection",
        "DHIS2Connection",
        "GCSConnection",
        "IASOConnection",
        "PostgreSQLConnection",
        "S3Connection",
    ] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    fields: List["ConnectionBySlugConnectionBySlugFields"]
    id: str
    name: str
    permissions: "ConnectionBySlugConnectionBySlugPermissions"
    slug: str
    type: ConnectionType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    user: Optional["ConnectionBySlugConnectionBySlugUser"]


class ConnectionBySlugConnectionBySlugFields(BaseModel):
    code: str
    created_at: Any = Field(alias="createdAt")
    secret: bool
    updated_at: Optional[Any] = Field(alias="updatedAt")
    value: Optional[str]


class ConnectionBySlugConnectionBySlugPermissions(BaseModel):
    delete: bool
    update: bool


class ConnectionBySlugConnectionBySlugUser(BaseModel):
    avatar: "ConnectionBySlugConnectionBySlugUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class ConnectionBySlugConnectionBySlugUserAvatar(BaseModel):
    color: str
    initials: str


ConnectionBySlug.model_rebuild()
ConnectionBySlugConnectionBySlug.model_rebuild()
ConnectionBySlugConnectionBySlugUser.model_rebuild()
