# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CreateDatasetError


class CreateDataset(BaseModel):
    create_dataset: "CreateDatasetCreateDataset" = Field(alias="createDataset")


class CreateDatasetCreateDataset(BaseModel):
    dataset: Optional["CreateDatasetCreateDatasetDataset"]
    errors: List[CreateDatasetError]
    link: Optional["CreateDatasetCreateDatasetLink"]
    success: bool


class CreateDatasetCreateDatasetDataset(BaseModel):
    attributes: List["CreateDatasetCreateDatasetDatasetAttributes"]
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["CreateDatasetCreateDatasetDatasetCreatedBy"] = Field(
        alias="createdBy"
    )
    description: Optional[str]
    id: str
    latest_version: Optional["CreateDatasetCreateDatasetDatasetLatestVersion"] = Field(
        alias="latestVersion"
    )
    links: "CreateDatasetCreateDatasetDatasetLinks"
    name: str
    permissions: "CreateDatasetCreateDatasetDatasetPermissions"
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")
    version: Optional["CreateDatasetCreateDatasetDatasetVersion"]
    versions: "CreateDatasetCreateDatasetDatasetVersions"
    workspace: Optional["CreateDatasetCreateDatasetDatasetWorkspace"]


class CreateDatasetCreateDatasetDatasetAttributes(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    key: str
    label: Optional[str]
    system: bool
    updated_at: Any = Field(alias="updatedAt")
    value: Optional[Any]


class CreateDatasetCreateDatasetDatasetCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateDatasetCreateDatasetDatasetLatestVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class CreateDatasetCreateDatasetDatasetLinks(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class CreateDatasetCreateDatasetDatasetPermissions(BaseModel):
    create_version: bool = Field(alias="createVersion")
    delete: bool
    update: bool


class CreateDatasetCreateDatasetDatasetVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class CreateDatasetCreateDatasetDatasetVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class CreateDatasetCreateDatasetDatasetWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class CreateDatasetCreateDatasetLink(BaseModel):
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["CreateDatasetCreateDatasetLinkCreatedBy"] = Field(
        alias="createdBy"
    )
    dataset: "CreateDatasetCreateDatasetLinkDataset"
    id: str
    is_pinned: bool = Field(alias="isPinned")
    permissions: "CreateDatasetCreateDatasetLinkPermissions"
    workspace: "CreateDatasetCreateDatasetLinkWorkspace"


class CreateDatasetCreateDatasetLinkCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class CreateDatasetCreateDatasetLinkDataset(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    id: str
    name: str
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")


class CreateDatasetCreateDatasetLinkPermissions(BaseModel):
    delete: bool
    pin: bool


class CreateDatasetCreateDatasetLinkWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


CreateDataset.model_rebuild()
CreateDatasetCreateDataset.model_rebuild()
CreateDatasetCreateDatasetDataset.model_rebuild()
CreateDatasetCreateDatasetLink.model_rebuild()
