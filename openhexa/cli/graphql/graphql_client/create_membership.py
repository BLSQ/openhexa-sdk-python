# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CreateMembershipError, MembershipRole


class CreateMembership(BaseModel):
    create_membership: "CreateMembershipCreateMembership" = Field(
        alias="createMembership"
    )


class CreateMembershipCreateMembership(BaseModel):
    errors: List[CreateMembershipError]
    membership: Optional["CreateMembershipCreateMembershipMembership"]
    success: bool


class CreateMembershipCreateMembershipMembership(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    permissions: "CreateMembershipCreateMembershipMembershipPermissions"
    role: MembershipRole
    team: "CreateMembershipCreateMembershipMembershipTeam"
    updated_at: Any = Field(alias="updatedAt")
    user: "CreateMembershipCreateMembershipMembershipUser"


class CreateMembershipCreateMembershipMembershipPermissions(BaseModel):
    delete: bool
    update: bool


class CreateMembershipCreateMembershipMembershipTeam(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class CreateMembershipCreateMembershipMembershipUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


CreateMembership.model_rebuild()
CreateMembershipCreateMembership.model_rebuild()
CreateMembershipCreateMembershipMembership.model_rebuild()
