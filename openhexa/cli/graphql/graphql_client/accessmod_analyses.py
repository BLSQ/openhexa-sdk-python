# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AccessmodAnalysisStatus, AccessmodAnalysisType


class AccessmodAnalyses(BaseModel):
    accessmod_analyses: "AccessmodAnalysesAccessmodAnalyses" = Field(
        alias="accessmodAnalyses"
    )


class AccessmodAnalysesAccessmodAnalyses(BaseModel):
    items: List["AccessmodAnalysesAccessmodAnalysesItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class AccessmodAnalysesAccessmodAnalysesItems(BaseModel):
    typename__: Literal[
        "AccessmodAccessibilityAnalysis",
        "AccessmodAnalysis",
        "AccessmodGeographicCoverageAnalysis",
        "AccessmodZonalStatistics",
    ] = Field(alias="__typename")
    author: "AccessmodAnalysesAccessmodAnalysesItemsAuthor"
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    permissions: "AccessmodAnalysesAccessmodAnalysesItemsPermissions"
    status: AccessmodAnalysisStatus
    type: AccessmodAnalysisType
    updated_at: Any = Field(alias="updatedAt")


class AccessmodAnalysesAccessmodAnalysesItemsAuthor(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class AccessmodAnalysesAccessmodAnalysesItemsPermissions(BaseModel):
    delete: bool
    run: bool
    update: bool


AccessmodAnalyses.model_rebuild()
AccessmodAnalysesAccessmodAnalyses.model_rebuild()
AccessmodAnalysesAccessmodAnalysesItems.model_rebuild()
