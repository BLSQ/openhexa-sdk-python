# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AccessmodAnalysisStatus,
    AccessmodAnalysisType,
    AccessmodFilesetMode,
    AccessmodFilesetStatus,
    UpdateAccessmodZonalStatisticsError,
)


class UpdateAccessmodZonalStatistics(BaseModel):
    update_accessmod_zonal_statistics: (
        "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatistics"
    ) = Field(alias="updateAccessmodZonalStatistics")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatistics(BaseModel):
    analysis: Optional[
        "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysis"
    ]
    errors: List[UpdateAccessmodZonalStatisticsError]
    success: bool


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysis(BaseModel):
    author: "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisAuthor"
    boundaries: Optional[
        "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisBoundaries"
    ]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerTeam",
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    permissions: "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisPermissions"
    population: Optional[
        "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisPopulation"
    ]
    status: AccessmodAnalysisStatus
    time_thresholds: Optional[Any] = Field(alias="timeThresholds")
    travel_times: Optional[
        "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisTravelTimes"
    ] = Field(alias="travelTimes")
    type: AccessmodAnalysisType
    updated_at: Any = Field(alias="updatedAt")
    zonal_statistics_geo: Optional[
        "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsGeo"
    ] = Field(alias="zonalStatisticsGeo")
    zonal_statistics_table: Optional[
        "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsTable"
    ] = Field(alias="zonalStatisticsTable")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisAuthor(
    BaseModel
):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisBoundaries(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisBoundariesOwnerTeam",
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisBoundariesOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisBoundariesOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisBoundariesOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    memberships: "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerTeamMemberships"
    name: str
    permissions: "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerTeamPermissions"
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerTeamMemberships(
    BaseModel
):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerTeamPermissions(
    BaseModel
):
    create_membership: bool = Field(alias="createMembership")
    delete: bool
    update: bool


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    avatar: "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerUserAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerUserAvatar(
    BaseModel
):
    color: str
    initials: str


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisPermissions(
    BaseModel
):
    delete: bool
    run: bool
    update: bool


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisPopulation(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisPopulationOwnerTeam",
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisPopulationOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisPopulationOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisPopulationOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisTravelTimes(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisTravelTimesOwnerTeam",
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisTravelTimesOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisTravelTimesOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisTravelTimesOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsGeo(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsGeoOwnerTeam",
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsGeoOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsGeoOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsGeoOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsTable(
    BaseModel
):
    created_at: Any = Field(alias="createdAt")
    id: str
    metadata: Any
    mode: AccessmodFilesetMode
    name: str
    owner: Optional[
        Annotated[
            Union[
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsTableOwnerTeam",
                "UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsTableOwnerUser",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    status: AccessmodFilesetStatus
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsTableOwnerTeam(
    BaseModel
):
    typename__: Literal["Team"] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsTableOwnerUser(
    BaseModel
):
    typename__: Literal["User"] = Field(alias="__typename")
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


UpdateAccessmodZonalStatistics.model_rebuild()
UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatistics.model_rebuild()
UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysis.model_rebuild()
UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisBoundaries.model_rebuild()
UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerTeam.model_rebuild()
UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisOwnerUser.model_rebuild()
UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisPopulation.model_rebuild()
UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisTravelTimes.model_rebuild()
UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsGeo.model_rebuild()
UpdateAccessmodZonalStatisticsUpdateAccessmodZonalStatisticsAnalysisZonalStatisticsTable.model_rebuild()
