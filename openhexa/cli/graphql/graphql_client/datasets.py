# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class Datasets(BaseModel):
    datasets: "DatasetsDatasets"


class DatasetsDatasets(BaseModel):
    items: List["DatasetsDatasetsItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetsDatasetsItems(BaseModel):
    attributes: List["DatasetsDatasetsItemsAttributes"]
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["DatasetsDatasetsItemsCreatedBy"] = Field(alias="createdBy")
    description: Optional[str]
    id: str
    latest_version: Optional["DatasetsDatasetsItemsLatestVersion"] = Field(
        alias="latestVersion"
    )
    links: "DatasetsDatasetsItemsLinks"
    name: str
    permissions: "DatasetsDatasetsItemsPermissions"
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")
    version: Optional["DatasetsDatasetsItemsVersion"]
    versions: "DatasetsDatasetsItemsVersions"
    workspace: Optional["DatasetsDatasetsItemsWorkspace"]


class DatasetsDatasetsItemsAttributes(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    key: str
    label: Optional[str]
    system: bool
    updated_at: Any = Field(alias="updatedAt")
    value: Optional[Any]


class DatasetsDatasetsItemsCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class DatasetsDatasetsItemsLatestVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class DatasetsDatasetsItemsLinks(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetsDatasetsItemsPermissions(BaseModel):
    create_version: bool = Field(alias="createVersion")
    delete: bool
    update: bool


class DatasetsDatasetsItemsVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class DatasetsDatasetsItemsVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetsDatasetsItemsWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


Datasets.model_rebuild()
DatasetsDatasets.model_rebuild()
DatasetsDatasetsItems.model_rebuild()
