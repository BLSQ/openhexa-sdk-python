# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import UpdateDatasetError


class UpdateDataset(BaseModel):
    update_dataset: "UpdateDatasetUpdateDataset" = Field(alias="updateDataset")


class UpdateDatasetUpdateDataset(BaseModel):
    dataset: Optional["UpdateDatasetUpdateDatasetDataset"]
    errors: List[UpdateDatasetError]
    success: bool


class UpdateDatasetUpdateDatasetDataset(BaseModel):
    attributes: List["UpdateDatasetUpdateDatasetDatasetAttributes"]
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["UpdateDatasetUpdateDatasetDatasetCreatedBy"] = Field(
        alias="createdBy"
    )
    description: Optional[str]
    id: str
    latest_version: Optional["UpdateDatasetUpdateDatasetDatasetLatestVersion"] = Field(
        alias="latestVersion"
    )
    links: "UpdateDatasetUpdateDatasetDatasetLinks"
    name: str
    permissions: "UpdateDatasetUpdateDatasetDatasetPermissions"
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")
    version: Optional["UpdateDatasetUpdateDatasetDatasetVersion"]
    versions: "UpdateDatasetUpdateDatasetDatasetVersions"
    workspace: Optional["UpdateDatasetUpdateDatasetDatasetWorkspace"]


class UpdateDatasetUpdateDatasetDatasetAttributes(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    key: str
    label: Optional[str]
    system: bool
    updated_at: Any = Field(alias="updatedAt")
    value: Optional[Any]


class UpdateDatasetUpdateDatasetDatasetCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class UpdateDatasetUpdateDatasetDatasetLatestVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class UpdateDatasetUpdateDatasetDatasetLinks(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class UpdateDatasetUpdateDatasetDatasetPermissions(BaseModel):
    create_version: bool = Field(alias="createVersion")
    delete: bool
    update: bool


class UpdateDatasetUpdateDatasetDatasetVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class UpdateDatasetUpdateDatasetDatasetVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class UpdateDatasetUpdateDatasetDatasetWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


UpdateDataset.model_rebuild()
UpdateDatasetUpdateDataset.model_rebuild()
UpdateDatasetUpdateDatasetDataset.model_rebuild()
