# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    BucketObjectType,
    ConnectionType,
    WorkspaceInvitationStatus,
    WorkspaceMembershipRole,
)


class Workspace(BaseModel):
    workspace: Optional["WorkspaceWorkspace"]


class WorkspaceWorkspace(BaseModel):
    bucket: "WorkspaceWorkspaceBucket"
    connections: List["WorkspaceWorkspaceConnections"]
    countries: List["WorkspaceWorkspaceCountries"]
    created_at: Any = Field(alias="createdAt")
    created_by: "WorkspaceWorkspaceCreatedBy" = Field(alias="createdBy")
    database: "WorkspaceWorkspaceDatabase"
    datasets: "WorkspaceWorkspaceDatasets"
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    invitations: "WorkspaceWorkspaceInvitations"
    members: "WorkspaceWorkspaceMembers"
    name: str
    permissions: "WorkspaceWorkspacePermissions"
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class WorkspaceWorkspaceBucket(BaseModel):
    name: str
    object: Optional["WorkspaceWorkspaceBucketObject"]
    objects: "WorkspaceWorkspaceBucketObjects"


class WorkspaceWorkspaceBucketObject(BaseModel):
    key: str
    name: str
    path: str
    size: Optional[Any]
    type: BucketObjectType
    updated_at: Optional[Any] = Field(alias="updatedAt")


class WorkspaceWorkspaceBucketObjects(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    has_previous_page: bool = Field(alias="hasPreviousPage")
    page_number: int = Field(alias="pageNumber")


class WorkspaceWorkspaceConnections(BaseModel):
    typename__: Literal[
        "Connection",
        "CustomConnection",
        "DHIS2Connection",
        "GCSConnection",
        "IASOConnection",
        "PostgreSQLConnection",
        "S3Connection",
    ] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    fields: List["WorkspaceWorkspaceConnectionsFields"]
    id: str
    name: str
    permissions: "WorkspaceWorkspaceConnectionsPermissions"
    slug: str
    type: ConnectionType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    user: Optional["WorkspaceWorkspaceConnectionsUser"]


class WorkspaceWorkspaceConnectionsFields(BaseModel):
    code: str
    created_at: Any = Field(alias="createdAt")
    secret: bool
    updated_at: Optional[Any] = Field(alias="updatedAt")
    value: Optional[str]


class WorkspaceWorkspaceConnectionsPermissions(BaseModel):
    delete: bool
    update: bool


class WorkspaceWorkspaceConnectionsUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class WorkspaceWorkspaceCountries(BaseModel):
    alpha_3: str = Field(alias="alpha3")
    code: str
    flag: str
    name: str
    who_info: "WorkspaceWorkspaceCountriesWhoInfo" = Field(alias="whoInfo")


class WorkspaceWorkspaceCountriesWhoInfo(BaseModel):
    default_crs: int = Field(alias="defaultCRS")
    simplified_extent: Optional[Any] = Field(alias="simplifiedExtent")


class WorkspaceWorkspaceCreatedBy(BaseModel):
    avatar: "WorkspaceWorkspaceCreatedByAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class WorkspaceWorkspaceCreatedByAvatar(BaseModel):
    color: str
    initials: str


class WorkspaceWorkspaceDatabase(BaseModel):
    credentials: Optional["WorkspaceWorkspaceDatabaseCredentials"]
    table: Optional["WorkspaceWorkspaceDatabaseTable"]
    tables: "WorkspaceWorkspaceDatabaseTables"


class WorkspaceWorkspaceDatabaseCredentials(BaseModel):
    db_name: str = Field(alias="dbName")
    host: str
    password: str
    port: int
    url: str
    username: str


class WorkspaceWorkspaceDatabaseTable(BaseModel):
    count: Optional[int]
    name: str
    sample: Any


class WorkspaceWorkspaceDatabaseTables(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class WorkspaceWorkspaceDatasets(BaseModel):
    items: List["WorkspaceWorkspaceDatasetsItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class WorkspaceWorkspaceDatasetsItems(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: str
    is_pinned: bool = Field(alias="isPinned")


class WorkspaceWorkspaceInvitations(BaseModel):
    items: List["WorkspaceWorkspaceInvitationsItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class WorkspaceWorkspaceInvitationsItems(BaseModel):
    created_at: Any = Field(alias="createdAt")
    email: str
    id: Any
    role: WorkspaceMembershipRole
    status: WorkspaceInvitationStatus
    updated_at: Optional[Any] = Field(alias="updatedAt")


class WorkspaceWorkspaceMembers(BaseModel):
    items: List["WorkspaceWorkspaceMembersItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class WorkspaceWorkspaceMembersItems(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    role: WorkspaceMembershipRole
    updated_at: Optional[Any] = Field(alias="updatedAt")


class WorkspaceWorkspacePermissions(BaseModel):
    create_connection: bool = Field(alias="createConnection")
    create_dataset: bool = Field(alias="createDataset")
    create_object: bool = Field(alias="createObject")
    create_pipeline: bool = Field(alias="createPipeline")
    create_pipeline_template_version: bool = Field(
        alias="createPipelineTemplateVersion"
    )
    delete: bool
    delete_database_table: bool = Field(alias="deleteDatabaseTable")
    delete_object: bool = Field(alias="deleteObject")
    download_object: bool = Field(alias="downloadObject")
    launch_notebook_server: bool = Field(alias="launchNotebookServer")
    manage_members: bool = Field(alias="manageMembers")
    update: bool


Workspace.model_rebuild()
WorkspaceWorkspace.model_rebuild()
WorkspaceWorkspaceBucket.model_rebuild()
WorkspaceWorkspaceConnections.model_rebuild()
WorkspaceWorkspaceCountries.model_rebuild()
WorkspaceWorkspaceCreatedBy.model_rebuild()
WorkspaceWorkspaceDatabase.model_rebuild()
WorkspaceWorkspaceDatasets.model_rebuild()
WorkspaceWorkspaceInvitations.model_rebuild()
WorkspaceWorkspaceMembers.model_rebuild()
