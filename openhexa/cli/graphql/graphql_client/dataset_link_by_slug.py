# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ConnectionType


class DatasetLinkBySlug(BaseModel):
    dataset_link_by_slug: Optional["DatasetLinkBySlugDatasetLinkBySlug"] = Field(
        alias="datasetLinkBySlug"
    )


class DatasetLinkBySlugDatasetLinkBySlug(BaseModel):
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["DatasetLinkBySlugDatasetLinkBySlugCreatedBy"] = Field(
        alias="createdBy"
    )
    dataset: "DatasetLinkBySlugDatasetLinkBySlugDataset"
    id: str
    is_pinned: bool = Field(alias="isPinned")
    permissions: "DatasetLinkBySlugDatasetLinkBySlugPermissions"
    workspace: "DatasetLinkBySlugDatasetLinkBySlugWorkspace"


class DatasetLinkBySlugDatasetLinkBySlugCreatedBy(BaseModel):
    avatar: "DatasetLinkBySlugDatasetLinkBySlugCreatedByAvatar"
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class DatasetLinkBySlugDatasetLinkBySlugCreatedByAvatar(BaseModel):
    color: str
    initials: str


class DatasetLinkBySlugDatasetLinkBySlugDataset(BaseModel):
    attributes: List["DatasetLinkBySlugDatasetLinkBySlugDatasetAttributes"]
    created_at: Any = Field(alias="createdAt")
    created_by: Optional["DatasetLinkBySlugDatasetLinkBySlugDatasetCreatedBy"] = Field(
        alias="createdBy"
    )
    description: Optional[str]
    id: str
    latest_version: Optional[
        "DatasetLinkBySlugDatasetLinkBySlugDatasetLatestVersion"
    ] = Field(alias="latestVersion")
    links: "DatasetLinkBySlugDatasetLinkBySlugDatasetLinks"
    name: str
    permissions: "DatasetLinkBySlugDatasetLinkBySlugDatasetPermissions"
    slug: str
    target_id: Any = Field(alias="targetId")
    updated_at: Any = Field(alias="updatedAt")
    version: Optional["DatasetLinkBySlugDatasetLinkBySlugDatasetVersion"]
    versions: "DatasetLinkBySlugDatasetLinkBySlugDatasetVersions"
    workspace: Optional["DatasetLinkBySlugDatasetLinkBySlugDatasetWorkspace"]


class DatasetLinkBySlugDatasetLinkBySlugDatasetAttributes(BaseModel):
    created_at: Any = Field(alias="createdAt")
    id: Any
    key: str
    label: Optional[str]
    system: bool
    updated_at: Any = Field(alias="updatedAt")
    value: Optional[Any]


class DatasetLinkBySlugDatasetLinkBySlugDatasetCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class DatasetLinkBySlugDatasetLinkBySlugDatasetLatestVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class DatasetLinkBySlugDatasetLinkBySlugDatasetLinks(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkBySlugDatasetLinkBySlugDatasetPermissions(BaseModel):
    create_version: bool = Field(alias="createVersion")
    delete: bool
    update: bool


class DatasetLinkBySlugDatasetLinkBySlugDatasetVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: str
    name: str
    target_id: Any = Field(alias="targetId")


class DatasetLinkBySlugDatasetLinkBySlugDatasetVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkBySlugDatasetLinkBySlugDatasetWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class DatasetLinkBySlugDatasetLinkBySlugPermissions(BaseModel):
    delete: bool
    pin: bool


class DatasetLinkBySlugDatasetLinkBySlugWorkspace(BaseModel):
    bucket: "DatasetLinkBySlugDatasetLinkBySlugWorkspaceBucket"
    connections: List["DatasetLinkBySlugDatasetLinkBySlugWorkspaceConnections"]
    countries: List["DatasetLinkBySlugDatasetLinkBySlugWorkspaceCountries"]
    created_at: Any = Field(alias="createdAt")
    created_by: "DatasetLinkBySlugDatasetLinkBySlugWorkspaceCreatedBy" = Field(
        alias="createdBy"
    )
    datasets: "DatasetLinkBySlugDatasetLinkBySlugWorkspaceDatasets"
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    invitations: "DatasetLinkBySlugDatasetLinkBySlugWorkspaceInvitations"
    members: "DatasetLinkBySlugDatasetLinkBySlugWorkspaceMembers"
    name: str
    permissions: "DatasetLinkBySlugDatasetLinkBySlugWorkspacePermissions"
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class DatasetLinkBySlugDatasetLinkBySlugWorkspaceBucket(BaseModel):
    name: str


class DatasetLinkBySlugDatasetLinkBySlugWorkspaceConnections(BaseModel):
    typename__: Literal[
        "Connection",
        "CustomConnection",
        "DHIS2Connection",
        "GCSConnection",
        "IASOConnection",
        "PostgreSQLConnection",
        "S3Connection",
    ] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    id: str
    name: str
    slug: str
    type: ConnectionType
    updated_at: Optional[Any] = Field(alias="updatedAt")


class DatasetLinkBySlugDatasetLinkBySlugWorkspaceCountries(BaseModel):
    alpha_3: str = Field(alias="alpha3")
    code: str
    flag: str
    name: str


class DatasetLinkBySlugDatasetLinkBySlugWorkspaceCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class DatasetLinkBySlugDatasetLinkBySlugWorkspaceDatasets(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkBySlugDatasetLinkBySlugWorkspaceInvitations(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkBySlugDatasetLinkBySlugWorkspaceMembers(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class DatasetLinkBySlugDatasetLinkBySlugWorkspacePermissions(BaseModel):
    create_connection: bool = Field(alias="createConnection")
    create_dataset: bool = Field(alias="createDataset")
    create_object: bool = Field(alias="createObject")
    create_pipeline: bool = Field(alias="createPipeline")
    create_pipeline_template_version: bool = Field(
        alias="createPipelineTemplateVersion"
    )
    delete: bool
    delete_database_table: bool = Field(alias="deleteDatabaseTable")
    delete_object: bool = Field(alias="deleteObject")
    download_object: bool = Field(alias="downloadObject")
    launch_notebook_server: bool = Field(alias="launchNotebookServer")
    manage_members: bool = Field(alias="manageMembers")
    update: bool


DatasetLinkBySlug.model_rebuild()
DatasetLinkBySlugDatasetLinkBySlug.model_rebuild()
DatasetLinkBySlugDatasetLinkBySlugCreatedBy.model_rebuild()
DatasetLinkBySlugDatasetLinkBySlugDataset.model_rebuild()
DatasetLinkBySlugDatasetLinkBySlugWorkspace.model_rebuild()
