# Generated by ariadne-codegen
# Source: openhexa/cli/graphql/queries

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    BucketObjectType,
    ConnectionType,
    CreateTemplateVersionPermissionReason,
    ParameterType,
    ParameterWidget,
    PipelineNotificationLevel,
    PipelineRunStatus,
    PipelineRunTrigger,
    PipelineType,
)


class Pipeline(BaseModel):
    pipeline: Optional["PipelinePipeline"]


class PipelinePipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    current_version: Optional["PipelinePipelineCurrentVersion"] = Field(
        alias="currentVersion"
    )
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    new_template_versions: List["PipelinePipelineNewTemplateVersions"] = Field(
        alias="newTemplateVersions"
    )
    notebook_path: Optional[str] = Field(alias="notebookPath")
    permissions: "PipelinePipelinePermissions"
    recipients: List["PipelinePipelineRecipients"]
    runs: "PipelinePipelineRuns"
    schedule: Optional[str]
    source_template: Optional["PipelinePipelineSourceTemplate"] = Field(
        alias="sourceTemplate"
    )
    template: Optional["PipelinePipelineTemplate"]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    versions: "PipelinePipelineVersions"
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")
    workspace: "PipelinePipelineWorkspace"


class PipelinePipelineCurrentVersion(BaseModel):
    config: Optional[Any]
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    external_link: Optional[Any] = Field(alias="externalLink")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    name: Optional[str]
    parameters: List["PipelinePipelineCurrentVersionParameters"]
    permissions: "PipelinePipelineCurrentVersionPermissions"
    pipeline: "PipelinePipelineCurrentVersionPipeline"
    template_version: Optional["PipelinePipelineCurrentVersionTemplateVersion"] = Field(
        alias="templateVersion"
    )
    timeout: Optional[int]
    user: Optional["PipelinePipelineCurrentVersionUser"]
    version_name: str = Field(alias="versionName")
    version_number: int = Field(alias="versionNumber")
    zipfile: str


class PipelinePipelineCurrentVersionParameters(BaseModel):
    choices: Optional[List[Any]]
    code: str
    connection: Optional[str]
    default: Optional[Any]
    help: Optional[str]
    multiple: bool
    name: str
    required: bool
    type: ParameterType
    widget: Optional[ParameterWidget]


class PipelinePipelineCurrentVersionPermissions(BaseModel):
    delete: bool
    update: bool


class PipelinePipelineCurrentVersionPipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


class PipelinePipelineCurrentVersionTemplateVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class PipelinePipelineCurrentVersionUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PipelinePipelineNewTemplateVersions(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    permissions: "PipelinePipelineNewTemplateVersionsPermissions"
    template: "PipelinePipelineNewTemplateVersionsTemplate"
    user: Optional["PipelinePipelineNewTemplateVersionsUser"]
    version_number: int = Field(alias="versionNumber")


class PipelinePipelineNewTemplateVersionsPermissions(BaseModel):
    delete: bool
    update: bool


class PipelinePipelineNewTemplateVersionsTemplate(BaseModel):
    code: str
    config: Optional[str]
    description: Optional[str]
    id: Any
    name: str
    updated_at: Any = Field(alias="updatedAt")


class PipelinePipelineNewTemplateVersionsUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PipelinePipelinePermissions(BaseModel):
    create_template_version: "PipelinePipelinePermissionsCreateTemplateVersion" = Field(
        alias="createTemplateVersion"
    )
    create_version: bool = Field(alias="createVersion")
    delete: bool
    run: bool
    schedule: bool
    stop_pipeline: bool = Field(alias="stopPipeline")
    update: bool


class PipelinePipelinePermissionsCreateTemplateVersion(BaseModel):
    is_allowed: bool = Field(alias="isAllowed")
    reasons: List[CreateTemplateVersionPermissionReason]


class PipelinePipelineRecipients(BaseModel):
    id: Any
    notification_level: PipelineNotificationLevel = Field(alias="notificationLevel")
    pipeline: "PipelinePipelineRecipientsPipeline"
    user: "PipelinePipelineRecipientsUser"


class PipelinePipelineRecipientsPipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


class PipelinePipelineRecipientsUser(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PipelinePipelineRuns(BaseModel):
    items: List["PipelinePipelineRunsItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelinePipelineRunsItems(BaseModel):
    code: str
    config: Any
    duration: Optional[int]
    enable_debug_logs: bool = Field(alias="enableDebugLogs")
    execution_date: Optional[Any] = Field(alias="executionDate")
    id: Any
    logs: Optional[str]
    outputs: List[
        Annotated[
            Union[
                "PipelinePipelineRunsItemsOutputsBucketObject",
                "PipelinePipelineRunsItemsOutputsDatabaseTable",
                "PipelinePipelineRunsItemsOutputsGenericOutput",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    progress: int
    run_id: Any
    send_mail_notifications: bool = Field(alias="sendMailNotifications")
    status: PipelineRunStatus
    timeout: Optional[int]
    trigger_mode: Optional[PipelineRunTrigger] = Field(alias="triggerMode")


class PipelinePipelineRunsItemsOutputsBucketObject(BaseModel):
    typename__: Literal["BucketObject"] = Field(alias="__typename")
    key: str
    name: str
    path: str
    size: Optional[Any]
    type: BucketObjectType
    updated_at: Optional[Any] = Field(alias="updatedAt")


class PipelinePipelineRunsItemsOutputsDatabaseTable(BaseModel):
    typename__: Literal["DatabaseTable"] = Field(alias="__typename")
    count: Optional[int]
    name: str
    sample: Any


class PipelinePipelineRunsItemsOutputsGenericOutput(BaseModel):
    typename__: Literal["GenericOutput"] = Field(alias="__typename")
    generic_name: Optional[str] = Field(alias="genericName")
    generic_type: str = Field(alias="genericType")
    generic_uri: str = Field(alias="genericUri")


class PipelinePipelineSourceTemplate(BaseModel):
    code: str
    config: Optional[str]
    current_version: Optional["PipelinePipelineSourceTemplateCurrentVersion"] = Field(
        alias="currentVersion"
    )
    description: Optional[str]
    id: Any
    name: str
    permissions: "PipelinePipelineSourceTemplatePermissions"
    source_pipeline: Optional["PipelinePipelineSourceTemplateSourcePipeline"] = Field(
        alias="sourcePipeline"
    )
    updated_at: Any = Field(alias="updatedAt")
    versions: "PipelinePipelineSourceTemplateVersions"
    workspace: Optional["PipelinePipelineSourceTemplateWorkspace"]


class PipelinePipelineSourceTemplateCurrentVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class PipelinePipelineSourceTemplatePermissions(BaseModel):
    delete: bool
    update: bool


class PipelinePipelineSourceTemplateSourcePipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


class PipelinePipelineSourceTemplateVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelinePipelineSourceTemplateWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class PipelinePipelineTemplate(BaseModel):
    code: str
    config: Optional[str]
    current_version: Optional["PipelinePipelineTemplateCurrentVersion"] = Field(
        alias="currentVersion"
    )
    description: Optional[str]
    id: Any
    name: str
    permissions: "PipelinePipelineTemplatePermissions"
    source_pipeline: Optional["PipelinePipelineTemplateSourcePipeline"] = Field(
        alias="sourcePipeline"
    )
    updated_at: Any = Field(alias="updatedAt")
    versions: "PipelinePipelineTemplateVersions"
    workspace: Optional["PipelinePipelineTemplateWorkspace"]


class PipelinePipelineTemplateCurrentVersion(BaseModel):
    changelog: Optional[str]
    created_at: Any = Field(alias="createdAt")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    version_number: int = Field(alias="versionNumber")


class PipelinePipelineTemplatePermissions(BaseModel):
    delete: bool
    update: bool


class PipelinePipelineTemplateSourcePipeline(BaseModel):
    code: str
    config: Any
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    has_new_template_versions: bool = Field(alias="hasNewTemplateVersions")
    id: Any
    name: Optional[str]
    notebook_path: Optional[str] = Field(alias="notebookPath")
    schedule: Optional[str]
    type: PipelineType
    updated_at: Optional[Any] = Field(alias="updatedAt")
    webhook_enabled: bool = Field(alias="webhookEnabled")
    webhook_url: Optional[str] = Field(alias="webhookUrl")


class PipelinePipelineTemplateVersions(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelinePipelineTemplateWorkspace(BaseModel):
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    name: str
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class PipelinePipelineVersions(BaseModel):
    items: List["PipelinePipelineVersionsItems"]
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelinePipelineVersionsItems(BaseModel):
    config: Optional[Any]
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    external_link: Optional[Any] = Field(alias="externalLink")
    id: Any
    is_latest_version: bool = Field(alias="isLatestVersion")
    name: Optional[str]
    timeout: Optional[int]
    version_name: str = Field(alias="versionName")
    version_number: int = Field(alias="versionNumber")
    zipfile: str


class PipelinePipelineWorkspace(BaseModel):
    bucket: "PipelinePipelineWorkspaceBucket"
    connections: List["PipelinePipelineWorkspaceConnections"]
    countries: List["PipelinePipelineWorkspaceCountries"]
    created_at: Any = Field(alias="createdAt")
    created_by: "PipelinePipelineWorkspaceCreatedBy" = Field(alias="createdBy")
    datasets: "PipelinePipelineWorkspaceDatasets"
    description: Optional[str]
    docker_image: Optional[str] = Field(alias="dockerImage")
    invitations: "PipelinePipelineWorkspaceInvitations"
    members: "PipelinePipelineWorkspaceMembers"
    name: str
    permissions: "PipelinePipelineWorkspacePermissions"
    slug: str
    updated_at: Optional[Any] = Field(alias="updatedAt")


class PipelinePipelineWorkspaceBucket(BaseModel):
    name: str


class PipelinePipelineWorkspaceConnections(BaseModel):
    typename__: Literal[
        "Connection",
        "CustomConnection",
        "DHIS2Connection",
        "GCSConnection",
        "IASOConnection",
        "PostgreSQLConnection",
        "S3Connection",
    ] = Field(alias="__typename")
    created_at: Any = Field(alias="createdAt")
    description: Optional[str]
    id: str
    name: str
    slug: str
    type: ConnectionType
    updated_at: Optional[Any] = Field(alias="updatedAt")


class PipelinePipelineWorkspaceCountries(BaseModel):
    alpha_3: str = Field(alias="alpha3")
    code: str
    flag: str
    name: str


class PipelinePipelineWorkspaceCreatedBy(BaseModel):
    date_joined: Any = Field(alias="dateJoined")
    display_name: str = Field(alias="displayName")
    email: str
    first_name: Optional[str] = Field(alias="firstName")
    id: Any
    language: str
    last_login: Optional[Any] = Field(alias="lastLogin")
    last_name: Optional[str] = Field(alias="lastName")


class PipelinePipelineWorkspaceDatasets(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelinePipelineWorkspaceInvitations(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelinePipelineWorkspaceMembers(BaseModel):
    page_number: int = Field(alias="pageNumber")
    total_items: int = Field(alias="totalItems")
    total_pages: int = Field(alias="totalPages")


class PipelinePipelineWorkspacePermissions(BaseModel):
    create_connection: bool = Field(alias="createConnection")
    create_dataset: bool = Field(alias="createDataset")
    create_object: bool = Field(alias="createObject")
    create_pipeline: bool = Field(alias="createPipeline")
    create_pipeline_template_version: bool = Field(
        alias="createPipelineTemplateVersion"
    )
    delete: bool
    delete_database_table: bool = Field(alias="deleteDatabaseTable")
    delete_object: bool = Field(alias="deleteObject")
    download_object: bool = Field(alias="downloadObject")
    launch_notebook_server: bool = Field(alias="launchNotebookServer")
    manage_members: bool = Field(alias="manageMembers")
    update: bool


Pipeline.model_rebuild()
PipelinePipeline.model_rebuild()
PipelinePipelineCurrentVersion.model_rebuild()
PipelinePipelineNewTemplateVersions.model_rebuild()
PipelinePipelinePermissions.model_rebuild()
PipelinePipelineRecipients.model_rebuild()
PipelinePipelineRuns.model_rebuild()
PipelinePipelineRunsItems.model_rebuild()
PipelinePipelineSourceTemplate.model_rebuild()
PipelinePipelineTemplate.model_rebuild()
PipelinePipelineVersions.model_rebuild()
PipelinePipelineWorkspace.model_rebuild()
