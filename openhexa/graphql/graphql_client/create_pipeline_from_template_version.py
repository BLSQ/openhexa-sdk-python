# Generated by ariadne-codegen
# Source: openhexa/graphql/queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CreatePipelineFromTemplateVersionError


class CreatePipelineFromTemplateVersion(BaseModel):
    create_pipeline_from_template_version: (
        "CreatePipelineFromTemplateVersionCreatePipelineFromTemplateVersion"
    ) = Field(alias="createPipelineFromTemplateVersion")


class CreatePipelineFromTemplateVersionCreatePipelineFromTemplateVersion(BaseModel):
    success: bool
    errors: Optional[List[CreatePipelineFromTemplateVersionError]]
    pipeline: Optional[
        "CreatePipelineFromTemplateVersionCreatePipelineFromTemplateVersionPipeline"
    ]


class CreatePipelineFromTemplateVersionCreatePipelineFromTemplateVersionPipeline(
    BaseModel
):
    id: Any
    name: Optional[str]
    code: str


CreatePipelineFromTemplateVersion.model_rebuild()
CreatePipelineFromTemplateVersionCreatePipelineFromTemplateVersion.model_rebuild()
